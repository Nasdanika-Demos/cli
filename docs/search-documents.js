var searchDocuments = {"http-server/index.html":{"link-uuid":"a344f7d9-2a12-4c69-a421-b546409a9736","title":"http-server","content":"Usage: nsd http-server [-hV] [--[no-]console] [--http-host=&lt;httpHost&gt;] [--http-port=&lt;httpPort&gt;] [--http-server-shutdown-timeout=&lt;timeout&gt;] [--open=&lt;uriToOpen&gt;] Serves HTTP routes --[no-]console If true, starts a console and waits for the exit command, otherwise creates a shutdown hook disposing the server -h, --help Show this help message and exit. --http-host=&lt;httpHost&gt; HTTP host (network interface) to bind to --http-port=&lt;httpPort&gt; HTTP port. If a port is not specified, an ephemeral port is used --http-server-shutdown-timeout=&lt;timeout&gt; Timeout in seconds, defaults to 3 seconds --open=&lt;uriToOpen&gt; Opens provided URI in the system browser the URI is resolved relative to http://localhost:&lt;port&gt;/ -V, --version Print version information and exit.","timestamp":1750179868383},"model/html-app/site/index.html":{"path":"model/html-app/site","link-uuid":"2afcb878-c15a-41ac-abd4-814af67eae80","title":"site","content":"Version: org.nasdanika.models.app.cli@2025.6.0 Usage: nsd model html-app site [-hlV] [--progress-console] [--progress-data] [--progress-json] [-b=&lt;baseDir&gt;] [-F=&lt;pageTemplateFile&gt;] [-m=&lt;domian&gt;] [-P=&lt;parallelism&gt;] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [-r=&lt;pageErrors&gt;] [-t=&lt;timeout&gt;] [-T=&lt;pageTemplate&gt;] [-w=&lt;workDir&gt;] [-x=&lt;extension&gt;] [-c=&lt;String=String&gt;]... [-C=URL]... [-M=&lt;String=String&gt;]... [-e [=&lt;excludes&gt;...]]... [-i[=&lt;includes&gt;...]]... &lt;output&gt; Generates HTML site &lt;output&gt; Output directory relative to the base directory -b, --base-dir=&lt;baseDir&gt; Base directory -c, --context-entry=&lt;String=String&gt; Context entries. Shadow entries in contexts and mounts. -C, --context=URL Context resource URL relative to the current directory. YAML, JSON, or properties. In properties dots are treated as key path separators. Type is inferred from the content type header, if it is present, or extension. Contexts are composed in the order of definition, later context entries shadowing the former -e, --exclude[=&lt;excludes&gt;...] Output directory clean excludes Ant pattern -F, --page-template-file=&lt;pageTemplateFile&gt; Page template file relative to the current directory -h, --help Show this help message and exit. -i, --include[=&lt;includes&gt;...] Output directory clean includes Ant pattern -l, --[no-]clean Clean working directory defaults to true -m, --domain=&lt;domian&gt; Sitemap domain -M, --context-mount=&lt;String=String&gt; MappingContext resource URL relative to the current directory. YAML, JSON, or properties. In properties dots are treated as key path separators. Type is inferred from the content type header, if it is present, or extension. Mounts shadow context entries. -P, --parallelism=&lt;parallelism&gt; If the value greater than one then an executor service is created and injected into the context to allow concurrent execution. --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -r, --errors=&lt;pageErrors&gt; Expected number of page errors -1 for any (not fail on errors) default is 0 -t, --timeout=&lt;timeout&gt; If parallelism is greater than one this option specifies timout in seconds awaiting completion of execution. Default value is 60. -T, --page-template=&lt;pageTemplate&gt; Page template URI relative to the current directory -V, --version Print version information and exit. -w, --work-dir=&lt;workDir&gt; Working directory -x, --extension=&lt;extension&gt; Extension of files to include in search and site map. Defaults to html Exit codes: Non-negative number Delegate result -1 Unhandled exception during execution -2 Invalid input -3 Diagnostic failed -4 Execution failed or was cancelled, successful rollback -5 Execution failed or was cancelled, rollback failed -6 Executor service termination timed out Example drawio diagram.drawio html-app -r root-action.yml --add-to-root site -r=-1 -F page-template.yml docs Grandparent drawio command loads diagram.drawio diagram resource Parent html-app command generates an html application model from the diagram elements This command: Loads a page template from page-template.yml Generates a documentation site ignoring page errors (-r=-1) Outputs the generated site to the docs directory Options -r, --errors -r=-1 command line option means &ldquo;don&rsquo;t fail on page errors&rdquo; such as: Blank pages Broken internal links Missing resources Missing resources are reported on pages using danger alert blocks. If you want to prevent deployment of a site with page errors, don&rsquo;t use the option or set it to the expected number of errors - there might be &ldquo;known errors&rdquo; which you are OK to live with. -T, --page-template Bootstrap Page to use as a template for site pages. In the page template file you can: Modify the theme - choose one of 20+ Bootswatch themes or the default theme. Please note that generated sites look good with light themes, and not so good (in my personal opinion) with dark themes. Set fluid to true. Modify navigation panel style See Bootstrap Page Load Specification for supported configuration keys. Sample page template in YAML: bootstrap.Page:\n  cdn: true\n  theme: Simplex\n  name: Application Page Template\n  language: EN\n  stylesheets: \n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/css/app.css \n    - https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css\n    - https://cdn.jsdelivr.net/npm/jstree@3.3.11/dist/themes/default/style.min.css\n    - https://cdn.jsdelivr.net/npm/github-markdown-css@5.1.0/github-markdown.min.css\n    - https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.3.1/build/styles/default.min.css\n    - https://cdn.jsdelivr.net/npm/bootstrap-vue@2.21.2/dist/bootstrap-vue.css\n  scripts:\n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/common.js \n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/dark-head.js \n    - https://cdn.jsdelivr.net/npm/jstree@3.3.11/dist/jstree.min.js\n    - https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.3.1/build/highlight.min.js\n    - https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js\n    - https://cdn.jsdelivr.net/npm/bootstrap-vue@2.21.2/dist/bootstrap-vue.min.js\n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/components/table.js\n    - https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js\n  body:\n    app.Page:\n      fluid: false\n      navigation-panel:\n        style: SEARCHABLE_TREE # COLLAPSIBLE_CARDS\n        collapsible: true -r, --errors -r=-1 command line option means &ldquo;don&rsquo;t fail on page errors&rdquo; such as: Blank pages Broken internal links Missing resources Missing resources are reported on pages using danger alert blocks. If you want to prevent deployment of a site with page errors, don&rsquo;t use the option or set it to the expected number of errors - there might be &ldquo;known errors&rdquo; which you are OK to live with. -T, --page-template Bootstrap Page to use as a template for site pages. In the page template file you can: Modify the theme - choose one of 20+ Bootswatch themes or the default theme. Please note that generated sites look good with light themes, and not so good (in my personal opinion) with dark themes. Set fluid to true. Modify navigation panel style See Bootstrap Page Load Specification for supported configuration keys. Sample page template in YAML: bootstrap.Page:\n  cdn: true\n  theme: Simplex\n  name: Application Page Template\n  language: EN\n  stylesheets: \n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/css/app.css \n    - https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css\n    - https://cdn.jsdelivr.net/npm/jstree@3.3.11/dist/themes/default/style.min.css\n    - https://cdn.jsdelivr.net/npm/github-markdown-css@5.1.0/github-markdown.min.css\n    - https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.3.1/build/styles/default.min.css\n    - https://cdn.jsdelivr.net/npm/bootstrap-vue@2.21.2/dist/bootstrap-vue.css\n  scripts:\n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/common.js \n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/dark-head.js \n    - https://cdn.jsdelivr.net/npm/jstree@3.3.11/dist/jstree.min.js\n    - https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.3.1/build/highlight.min.js\n    - https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js\n    - https://cdn.jsdelivr.net/npm/bootstrap-vue@2.21.2/dist/bootstrap-vue.min.js\n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/components/table.js\n    - https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js\n  body:\n    app.Page:\n      fluid: false\n      navigation-panel:\n        style: SEARCHABLE_TREE # COLLAPSIBLE_CARDS\n        collapsible: true -r=-1 command line option means &ldquo;don&rsquo;t fail on page errors&rdquo; such as: Blank pages Broken internal links Missing resources Missing resources are reported on pages using danger alert blocks. If you want to prevent deployment of a site with page errors, don&rsquo;t use the option or set it to the expected number of errors - there might be &ldquo;known errors&rdquo; which you are OK to live with. Bootstrap Page to use as a template for site pages. In the page template file you can: Modify the theme - choose one of 20+ Bootswatch themes or the default theme. Please note that generated sites look good with light themes, and not so good (in my personal opinion) with dark themes. Set fluid to true. Modify navigation panel style See Bootstrap Page Load Specification for supported configuration keys. Sample page template in YAML: bootstrap.Page:\n  cdn: true\n  theme: Simplex\n  name: Application Page Template\n  language: EN\n  stylesheets: \n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/css/app.css \n    - https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css\n    - https://cdn.jsdelivr.net/npm/jstree@3.3.11/dist/themes/default/style.min.css\n    - https://cdn.jsdelivr.net/npm/github-markdown-css@5.1.0/github-markdown.min.css\n    - https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.3.1/build/styles/default.min.css\n    - https://cdn.jsdelivr.net/npm/bootstrap-vue@2.21.2/dist/bootstrap-vue.css\n  scripts:\n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/common.js \n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/dark-head.js \n    - https://cdn.jsdelivr.net/npm/jstree@3.3.11/dist/jstree.min.js\n    - https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.3.1/build/highlight.min.js\n    - https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js\n    - https://cdn.jsdelivr.net/npm/bootstrap-vue@2.21.2/dist/bootstrap-vue.min.js\n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/components/table.js\n    - https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js\n  body:\n    app.Page:\n      fluid: false\n      navigation-panel:\n        style: SEARCHABLE_TREE # COLLAPSIBLE_CARDS\n        collapsible: true","timestamp":1750179868462},"list-inspectable-rules/index.html":{"link-uuid":"521a735c-290d-46c8-9dfa-582e4771fe3c","title":"list-inspectable-rules","content":"Version: org.nasdanika.launcher.demo@2025.6.0 Usage: nsd list-inspectable-rules [-hV] [--progress-console] [--progress-data] [--progress-json] [-o=&lt;output&gt;] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [--exclude-rule[=&lt;ruleExcludes&gt;...]]... [--exclude-rule-set [=&lt;ruleSetExcludes&gt;...]]... [--include-rule [=&lt;ruleIncludes&gt;...]]... [--include-rule-set [=&lt;ruleSetIncludes&gt;...]]... Lists available rules --exclude-rule[=&lt;ruleExcludes&gt;...] ID's of rules to exclude --exclude-rule-set[=&lt;ruleSetExcludes&gt;...] ID's of rule sets to exclude -h, --help Show this help message and exit. --include-rule[=&lt;ruleIncludes&gt;...] ID's of rules to include --include-rule-set[=&lt;ruleSetIncludes&gt;...] ID's of rule sets to include -o, --output=&lt;output&gt; Output file --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -V, --version Print version information and exit. Options -o, --output Test option documentation -o, --output Test option documentation Test option documentation","timestamp":1750179868426},"drawio/invoke/index.html":{"path":"drawio/invoke","link-uuid":"513a4ed1-9aba-4b49-affa-ebf70f17dad7","title":"invoke","content":"Version: org.nasdanika.cli@2025.6.0 Usage: nsd drawio invoke [-hV] [--progress-console] [--progress-data] [--progress-json] [-b=&lt;bindProperty&gt;] [-c=&lt;connectionBase&gt;] [-p=&lt;processorProperty&gt;] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [&lt;parameters&gt;...] Creates an Invocable dynamic proxy from a diagram calls it with command parameters and returns result [&lt;parameters&gt;...] Invocable parameters -b, --bind-property=&lt;bindProperty&gt; Bind property providing dynamic proxy method name Defaults to bind -c, --connection-base=&lt;connectionBase&gt; Connection base Valid values: PARENT, SOURCE, TARGET -h, --help Show this help message and exit. -p, --processor-property=&lt;processorProperty&gt; Processor property Defaults to processor --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -V, --version Print version information and exit. Example drawio -p my-property=&quot;My property&quot; invocable.drawio invoke 33 66 The parent drawio command loads invocable.drawio diagram with my-property property set to My property. This property is used for placeholder expansion. This command: Uses default values for --processor-property and --bind-property options to create diagram element processors and bind them to dynamic proxy methods - in this case a single invoke() method. Calls the method with command line arguments - 33 and 66 Options -p, --processor-property -p, --processor-property ","timestamp":1750179868265},"gitlab/contribute/retrospect/demo/index.html":{"path":"gitlab/contribute/retrospect/demo","link-uuid":"a07267fc-db74-4ae3-ae7f-60994f955232","title":"demo","content":"Usage: nsd gitlab contribute retrospect demo [-hV] Demo retrospect command -h, --help Show this help message and exit. -V, --version Print version information and exit.","timestamp":1750179868295},"rules/list/index.html":{"path":"rules/list","link-uuid":"ebd2390f-ab4c-4669-9d81-d93646d4ace1","title":"list","content":"Usage: nsd rules list [-hrV] [--progress-console] [--progress-data] [--progress-json] [-o=&lt;output&gt;] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [--exclude-rule [=&lt;ruleExcludes&gt;...]]... [--exclude-rule-set [=&lt;ruleSetExcludes&gt;...]]... [--include-rule [=&lt;ruleIncludes&gt;...]]... [--include-rule-set [=&lt;ruleSetIncludes&gt;...]]... Lists available rule sets and rules --exclude-rule[=&lt;ruleExcludes&gt;...] ID's of rules to exclude --exclude-rule-set[=&lt;ruleSetExcludes&gt;...] ID's of rule sets to exclude -h, --help Show this help message and exit. --include-rule[=&lt;ruleIncludes&gt;...] ID's of rules to include --include-rule-set[=&lt;ruleSetIncludes&gt;...] ID's of rule sets to include -o, --output=&lt;output&gt; Output file --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -r, --[no-]rules Output rules -V, --version Print version information and exit.","timestamp":1750179868507},"model/save/index.html":{"path":"model/save","link-uuid":"4e764e1c-1fda-4bff-8c47-2c1c7c9e3f37","title":"save","content":"Version: org.nasdanika.cli@2025.6.0 Usage: nsd model save [-hV] [--progress-console] [--progress-data] [--progress-json] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [--content-type-resource-factory=&lt;String=Class&gt;]... [--extension-resource-factory=&lt;String=Class&gt;]... [--protocol-resource-factory=&lt;String=Class&gt;]... &lt;output&gt; Saves model to a file &lt;output&gt; Output file --content-type-resource-factory=&lt;String=Class&gt; Maps content type to resource factory class --extension-resource-factory=&lt;String=Class&gt; Maps extension to resource factory class -h, --help Show this help message and exit. --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor --protocol-resource-factory=&lt;String=Class&gt; Maps protocol to resource factory class -V, --version Print version information and exit.","timestamp":1750179868471},"gitlab/contribute/retrospect/demo-analyze/index.html":{"path":"gitlab/contribute/retrospect/demo-analyze","link-uuid":"8d75f1c5-b50d-43e0-8e26-f8d7b1006182","title":"demo-analyze","content":"Usage: nsd gitlab contribute retrospect demo-analyze [-hV] [--progress-console] [--progress-data] [--progress-json] [-p=&lt;pom&gt;] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] Demo source analysis command -h, --help Show this help message and exit. -p, --pom=&lt;pom&gt; Pom file, defaults to pom.xml --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -V, --version Print version information and exit.","timestamp":1750179868298},"launcher/index.html":{"link-uuid":"09eec794-9212-4a5e-947c-8a6fb013c8bd","title":"launcher","content":"Version: org.nasdanika.cli@2025.6.0 Usage: nsd launcher [-hstvV] [-a=&lt;args&gt;] [--add-modules=&lt;addModules&gt;] [-b=&lt;base&gt;] [-c=&lt;className&gt;] [-C=&lt;classPathModules&gt;] [-f=&lt;optionsFile&gt;] [-j=&lt;javaCommand&gt;] [-m=&lt;moduleName&gt;] [-M=&lt;modulesFile&gt;] [-o=&lt;output&gt;] [-p=&lt;pathSeparator&gt;] [-P=&lt;prefix&gt;] [-r=&lt;rootModules&gt;] [&lt;repositories&gt;...] Generates Java command line from directories of modules/jars [&lt;repositories&gt;...] Directories to scan for modules, defaults to lib -a, --args=&lt;args&gt; Arguments, defaults to %* --add-modules=&lt;addModules&gt; Comma-separated list of modules to add to Java command --add-modules Computed if not specified -b, --base=&lt;base&gt; Base repositories directory -c, --class=&lt;className&gt; Application class, defaults to org.nasdanika.cli.Application -C, --claspath-modules=&lt;classPathModules&gt; Comma-separated list of classpath modules -f, --options-file=&lt;optionsFile&gt; File to output options to -h, --help Show this help message and exit. -j, --java=&lt;javaCommand&gt; Java command, defaults to java Can be used to add extra options such as system properties -m, --module=&lt;moduleName&gt; Application module, defaults to org.nasdanika.cli -M, --modules=&lt;modulesFile&gt; Modules to add to the module path -o, --output=&lt;output&gt; Output file -p, --path-separator=&lt;pathSeparator&gt; Path separator, defaults to the system path separator -P, --prefix=&lt;prefix&gt; Module path prefix -r, --root-modules=&lt;rootModules&gt; Comma-separated list of root modules Supports .* and .** patterns -s, --absolute Use absolute paths -t, --options Output only options -v, --verbose Output debug information -V, --version Print version information and exit.","timestamp":1750179868419},"drawio/index.html":{"link-uuid":"0d3a2a2d-3cc3-4c3a-8ddd-3d390e8c9a4b","title":"drawio","content":"Version: org.nasdanika.cli@2025.6.0 Usage: nsd drawio [-fhV] [-b=&lt;baseUri&gt;] [-p=&lt;String=String&gt;]... [-P=URL]... [-u=&lt;String=String&gt;]... [-U=URL of URI to URL mapping resource]... &lt;document&gt; [COMMAND] Loads Drawio document from a URI or file &lt;document&gt; Document URI or file path, resolved relative to the current directory -b, --base-url=&lt;baseUri&gt; Base URI for reolving document and target URIs. Defaults to the current directory URI Resolved relative to the current directory URI -f, --file Document parameter is a file path -h, --help Show this help message and exit. -p, --property=&lt;String=String&gt; Property -P, --properties=URL Properties resource URL relative to the current directory. YAML, JSON, or properties. Type is inferred from the content type header, if it is present, or extension. Properties are loaded in the order of definition, later properties replacing the former -u, --uri=&lt;String=String&gt; URI mapping. Target URIs are resolved relative to the base URI -U, --uris=URL of URI to URL mapping resource URI map resource URL relative to the document file YAML, JSON, or properties Type is inferred from the content type header, if it is present, or extension -V, --version Print version information and exit. Commands: html-app - Generates html application model from a drawio document http-server - Routes HTTP requests to a diagram element processor invoke - Creates an Invocable dynamic proxy from a diagram Examples drawio test-data/jira/diagram.drawio html-app -r test-data/jira/root-action.yml --add-to-root site -r=-1 -F test-data/jira/page-template.yml test-data/jira/docs Loads test-data/drawio-http/diagram.drawio diagram resource Executes html-app sub-command and its site sub-command to generate a documentation site drawio test-data/drawio-http/diagram.drawio http-server --http-port=8080 processor route Loads test-data/drawio-http/diagram.drawio diagram resource Executes http-server sub-command which serves diagram element routes at port 8080 drawio -p my-property=&quot;My property&quot; test-data/invocable.drawio invoke 33 66 Sets property my-property to My property Loads test-data/invocable.drawio diagram document Executes invoke sub-command with 33 and 66 arguments URI Handlers The command loads URI Handlers using the capability framework. You can load resources from Maven with the Maven URI Handler. You can also create and register a custom URI handler, for example GitLabURIHandler to load diagram resources from GitLab. Below is an example of a capability factory: \nimport org.eclipse.emf.ecore.resource.URIConverter;\nimport org.eclipse.emf.ecore.resource.URIHandler;\nimport org.nasdanika.capability.emf.URIConverterContributorCapabilityFactory;\nimport org.nasdanika.common.ProgressMonitor;\n\n/**\n * Contributes {@link URIHandler} loading from Maven repositories\n */\npublic class MavenURIHandlerCapabilityFactory extends URIConverterContributorCapabilityFactory {\n\n    @Override\n    protected void contribute(\n            URIConverter uriConverter, \n            Loader loader,\n            ProgressMonitor progressMonitor) {  \n        uriConverter.getURIHandlers().add(0, new MavenURIHandler(loader.getCapabilityLoader(), progressMonitor));\n        \n    }\n    \n}\n Contributing sub-commands To contribute a sub-command: Add @ParentCommands(Document.Supplier.class) annotation to your command class Declare a field of type Document.Supplier and annotate it with @ParentCommand. You may declare a setter method instead. Use the field value to obtain an instance of Document. as shown in the code snippet below: import org.nasdanika.cli.ParentCommands;\nimport org.nasdanika.common.ProgressMonitor;\nimport org.nasdanika.drawio.Document;\n\nimport picocli.CommandLine.Command;\nimport picocli.CommandLine.ParentCommand;\n\n@Command(...)\n@ParentCommands(Document.Supplier.class)\npublic class MyCommand {\n    \n    @ParentCommand\n    private Document.Supplier documentSupplier;\n\n    public void myMethod(ProgressMonitor progressMonitor) {\n        Document document = documentSupplier.getDocument(progressMonitor); \n        ...\n    }       \n\n}\n Below is a factory: import java.util.List;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.concurrent.CompletionStage;\n\nimport org.nasdanika.common.ProgressMonitor;\n\nimport picocli.CommandLine;\n\npublic class MyCommanddFactory extends SubCommandCapabilityFactory&lt;MyCommand&gt; {\n\n    @Override\n    protected Class&lt;MyCommand&gt; getCommandType() {\n        return MyCommand.class;\n    }\n    \n    @Override\n    protected CompletionStage&lt;MyCommand&gt; doCreateCommand(\n            List&lt;CommandLine&gt; parentPath,\n            Loader loader,\n            ProgressMonitor progressMonitor) {\n        return CompletableFuture.completedStage(new MyCommand(loader.getCapabilityLoader()));\n    }\n\n}\n The factory shall be registered as a CapabilityFactory provider in module-info.java: import org.nasdanika.capability.CapabilityFactory;\n\nmodule &lt;module name&gt; {\n\n    ...    \n    \n    opens &lt;package with commands&gt;; // For reflection and documentation resource loading\n    \n    provides CapabilityFactory with MyCommandFactory;\n    \n}\n Executable diagrams sub-commands You can create sub-commands which execute diagrams by extending AbstractElementInvocableCommand. invoke is an example of such a command. General purpose executable graphs and diagrams Medium story explains how to create diagram element processors.","timestamp":1750179868259},"gitlab/invoke/index.html":{"path":"gitlab/invoke","link-uuid":"a72cb3db-f247-4272-8437-b0ae3975ffd8","title":"invoke","content":"Version: org.nasdanika.cli@2025.6.0 Usage: nsd gitlab invoke [-fhV] [--progress-console] [--progress-data] [--progress-json] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [-p=&lt;String=String&gt;]... [-P=URL]... &lt;uri&gt; [&lt;bindings&gt;...] Invokes URI &lt;uri&gt; URI to invoke [&lt;bindings&gt;...] Bindings URIs -f, --file URI parameter is a file path -h, --help Show this help message and exit. -p, --property=&lt;String=String&gt; Property -P, --properties=URL Properties resource URL relative to the current directory. YAML, JSON, or properties. Type is inferred from the content type header, if it is present, or extension. Properties are loaded in the order of definition, later properties replacing the former --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -V, --version Print version information and exit. Loads an invocable from a URI as explained in Loading Invocables from URIs and then invokes it with arguments obtained from parameters invocable URIs.","timestamp":1750179868364},"rules/site/index.html":{"path":"rules/site","link-uuid":"3b823d65-b7c5-4c70-aaa4-dc60040268ab","title":"site","content":"Usage: nsd rules site [-fhlRV] [--progress-console] [--progress-data] [--progress-json] [-b=&lt;baseDir&gt;] [-m=&lt;domian&gt;] [-P=&lt;parallelism&gt;] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [-r=&lt;pageErrors&gt;] [--root-action-icon=&lt;rootActionIcon&gt;] [--root-action-location=&lt;rootActionLocation&gt;] [--root-action-text=&lt;rootActionText&gt;] [-t=&lt;timeout&gt;] [-T=&lt;pageTemplate&gt;] [-w=&lt;workDir&gt;] [-c=&lt;String=String&gt;]... [-C=URL]... [-M=&lt;String=String&gt;]... [-e[=&lt;excludes&gt;...]]... [-i [=&lt;includes&gt;...]]... &lt;model&gt; &lt;output&gt; Generates rule set documentation site &lt;model&gt; Model URI, resolved relative to the current directory or looked up in registered rule sets if -R option is provided &lt;output&gt; Output directory -b, --base-dir=&lt;baseDir&gt; Base directory -c, --context-entry=&lt;String=String&gt; Context entries. Shadow entries in contexts and mounts. -C, --context=URL Context resource URL relative to the current directory. YAML, JSON, or properties. In properties dots are treated as key path separators. Type is inferred from the content type header, if it is present, or extension. Contexts are composed in the order of definition, later context entries shadowing the former -e, --exclude[=&lt;excludes&gt;...] Output directory clean excludes Ant pattern -f, --file Mdel parameter is a file path -h, --help Show this help message and exit. -i, --include[=&lt;includes&gt;...] Output directory clean includes Ant pattern -l, --[no-]clean Clean working directory defaults to true -m, --domain=&lt;domian&gt; Sitemap domain -M, --context-mount=&lt;String=String&gt; MappingContext resource URL relative to the current directory. YAML, JSON, or properties. In properties dots are treated as key path separators. Type is inferred from the content type header, if it is present, or extension. Mounts shadow context entries. -P, --parallelism=&lt;parallelism&gt; If the value greater than one then an executor service is created and injected into the context to allow concurrent execution. --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -r, --errors=&lt;pageErrors&gt; Expected number of page errors -1 for any (not fail on errors) default is 0 -R, --registered Use registered rule set with provided URI --root-action-icon=&lt;rootActionIcon&gt; Root action icon --root-action-location=&lt;rootActionLocation&gt; Root action location --root-action-text=&lt;rootActionText&gt; Root action text -t, --timeout=&lt;timeout&gt; If parallelism is greater than one this option specifies timout in seconds awaiting completion of execution. Default value is 60. -T, --page-template=&lt;pageTemplate&gt; Page template URI relative to the current directory -V, --version Print version information and exit. -w, --work-dir=&lt;workDir&gt; Working directory Exit codes: Non-negative number Delegate result -1 Unhandled exception during execution -2 Invalid input -3 Diagnostic failed -4 Execution failed or was cancelled, successful rollback -5 Execution failed or was cancelled, rollback failed -6 Executor service termination timed out","timestamp":1750179868511},"model/html-app/save/index.html":{"path":"model/html-app/save","link-uuid":"c4f6c4cd-40ed-4b3a-990a-d3620aef1690","title":"save","content":"Version: org.nasdanika.cli@2025.6.0 Usage: nsd model html-app save [-hV] [--progress-console] [--progress-data] [--progress-json] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [--content-type-resource-factory=&lt;String=Class&gt;]. .. [--extension-resource-factory=&lt;String=Class&gt;]... [--protocol-resource-factory=&lt;String=Class&gt;]... &lt;output&gt; Saves model to a file &lt;output&gt; Output file --content-type-resource-factory=&lt;String=Class&gt; Maps content type to resource factory class --extension-resource-factory=&lt;String=Class&gt; Maps extension to resource factory class -h, --help Show this help message and exit. --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor --protocol-resource-factory=&lt;String=Class&gt; Maps protocol to resource factory class -V, --version Print version information and exit.","timestamp":1750179868454},"app/index.html":{"link-uuid":"175801ae-f245-428c-bf0d-c45b203791e0","title":"app","content":"Version: org.nasdanika.models.app.cli@2025.6.0 Usage: nsd app [-hV] [COMMAND] HTML Application model commands -h, --help Show this help message and exit. -V, --version Print version information and exit. Commands: site - Generates HTML site","timestamp":1750179868194},"index.html":{"link-uuid":"f1ee207b-76db-411f-805a-6fad9c241da9","title":"nsd","content":"Version: org.nasdanika.cli@2025.6.0 Usage: nsd [-hV] COMMAND Nasdanika Command Line Interface -h, --help Show this help message and exit. -V, --version Print version information and exit. Commands: launcher - Generates Java command line from directories of modules/jars annotated-element-provider-test - app - HTML Application model commands chat-server - Serves HTTP routes for AI chat drawio - Loads Drawio document from a URI or file gitlab - Commands for working with GitLab gsh - Groovy Shell help - Outputs usage for all registred commands http-server - Serves HTTP routes inspect-yaml - Demo of YAML inspection invoke - Invokes URI java - Commands related to Java list-inspectable-rules - Lists available rules list-models - Lists available AI models list-rules - Lists available rules model - Loads EObject from a URI or file module-graph - Generates module dependency graph pdf-indexer - Creates a vector index and a URI -&gt; text rules - Rules commands shell - Starts an interactive shell","timestamp":1750179868390},"gitlab/contribute/index.html":{"path":"gitlab/contribute","link-uuid":"bd850adb-1452-4706-88ec-006c20fafec6","title":"contribute","content":"Usage: nsd gitlab contribute [-hV] [-a=&lt;String=String&gt;]... (&lt;authorEmail&gt; &lt;authorName&gt; [-m=&lt;commitMessage&gt;] [-b=&lt;branch&gt;] [-f] [-s]) [[-t=&lt;targetBranch&gt;] [--[no-] allow-collaboration] [--approvals-before-merge=&lt;approvalsBeforeMerge&gt;] [--assignee=&lt;Assignee ID&gt;]... [--merge-request-description=&lt;description&gt;] [-- [no-]discussion-locked] [--label=&lt;labels&gt;]... [--milestone=&lt;milestoneId&gt;] [--[no-] remove-source-branch] [--reviewer=&lt;Reviewer ID&gt;]... [--[no-]squash] [--merge-request-title=&lt;title&gt;] [--state-event=&lt;stateEvent&gt;]] [COMMAND] Parent for sub-command contributing via GitLabURIHandler -a, --alias=&lt;String=String&gt; Map project alias (key) to project ID or path (value) -h, --help Show this help message and exit. -V, --version Print version information and exit. Commit &lt;authorEmail&gt; Commit author eMail &lt;authorName&gt; Commit author name -b, --branch=&lt;branch&gt; Branch to commit to -f, --force Force commit -m, --commit-message=&lt;commitMessage&gt; Commit message -s, --stats With stats Merge request --[no-]allow-collaboration --approvals-before-merge=&lt;approvalsBeforeMerge&gt; Number of approvals before merge --assignee=&lt;Assignee ID&gt; Assignee ID --[no-]discussion-locked --label=&lt;labels&gt; --merge-request-description=&lt;description&gt; --merge-request-title=&lt;title&gt; --milestone=&lt;milestoneId&gt; Milestone ID --[no-]remove-source-branch --reviewer=&lt;Reviewer ID&gt; Reviewer ID --[no-]squash --state-event=&lt;stateEvent&gt; Valid values: close, reopen -t, --target-branch=&lt;targetBranch&gt; Target branch, defaults to the original branch Commands: gsh - Groovy Shell invoke - Invokes URI junit - Generates JUnit tests retrospect - Parent for sub-commands contributing based on history","timestamp":1750179868275},"model/html-app/crew-ai/index.html":{"path":"model/html-app/crew-ai","link-uuid":"ec78fc1b-3a31-443b-b860-0d9587bb0bec","title":"crew-ai","content":"Version: org.nasdanika.models.crewai.cli@2025.6.0 Usage: nsd model html-app crew-ai [-hV] [--progress-console] [--progress-data] [--progress-json] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [--content-type-resource-factory=&lt;String=Class &gt;]... [--extension-resource-factory=&lt;String=Class&gt;]. .. [--protocol-resource-factory=&lt;String=Class&gt;].. . &lt;output&gt; Generates CrewAI code and configuration from a model &lt;output&gt; Crew class output file --content-type-resource-factory=&lt;String=Class&gt; Maps content type to resource factory class --extension-resource-factory=&lt;String=Class&gt; Maps extension to resource factory class -h, --help Show this help message and exit. --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor --protocol-resource-factory=&lt;String=Class&gt; Maps protocol to resource factory class -V, --version Print version information and exit.","timestamp":1750179868443},"java/junit/jacoco/index.html":{"path":"java/junit/jacoco","link-uuid":"515dcb88-1e99-4dad-b70a-2ec8159b0ef9","title":"jacoco","content":"Usage: nsd java junit jacoco [-hV] [-c=&lt;classes&gt;] [-j=&lt;jacoco&gt;] [-m=&lt;moduleName&gt;] Loads coverage from jacoco.exec and classes directory -c, --classes=&lt;classes&gt; Classes directory path relative to the project directory, defaults to target/classes -h, --help Show this help message and exit. -j, --jacoco=&lt;jacoco&gt; jacoco.exec file path relative to the project directory, defaults to target/jacoco.exec -m, --module=&lt;moduleName&gt; Coverage module name -V, --version Print version information and exit.","timestamp":1750179868415},"gitlab/contribute/retrospect/index.html":{"path":"gitlab/contribute/retrospect","link-uuid":"1e2fd744-0dab-4f8f-9c39-d7f27109e4ee","title":"retrospect","content":"Usage: nsd gitlab contribute retrospect [-hV] [--ref=&lt;ref&gt;] [--since=&lt;since&gt;] [--until=&lt;until&gt;] [--path=&lt;paths&gt;]... &lt;project&gt; [COMMAND] Parent for sub-commands contributing based on history &lt;project&gt; Project ID or path -h, --help Show this help message and exit. --path=&lt;paths&gt; Paths of interest --ref=&lt;ref&gt; Reference - branch, tag, or commit --since=&lt;since&gt; Since date in ISO8601 format yyyy-MM-dd'T'HH:mm:ssZ --until=&lt;until&gt; Since date in ISO8601 format yyyy-MM-dd'T'HH:mm:ssZ -V, --version Print version information and exit. Commands: demo - Demo retrospect command demo-analyze - Demo source analysis command gsh - Groovy Shell invoke - Invokes URI","timestamp":1750179868340},"drawio/html-app/index.html":{"path":"drawio/html-app","link-uuid":"eb9f7723-7bc0-4943-a9cb-37d9671cd3df","title":"html-app","content":"Version: org.nasdanika.models.app.cli@2025.6.0 Usage: nsd drawio html-app [-fhRV] [-b=&lt;base&gt;] [-P=&lt;insertionIndex&gt;] [-r=&lt;rootLabel&gt;] [--ref-base-uri=&lt;refBase&gt;] [-x=&lt;indexName&gt;] [--content-type-resource-factory=&lt;String=Class&gt;]... [--extension-resource-factory=&lt;String=Class&gt;]... [-F=Invocable URI]... [--protocol-resource-factory=&lt;String=Class&gt;]... [COMMAND] Generates html application model from a drawio document -b, --base-uri=&lt;base&gt; Base URI. E.g. 'pages/' --content-type-resource-factory=&lt;String=Class&gt; Maps content type to resource factory class --extension-resource-factory=&lt;String=Class&gt; Maps extension to resource factory class -f, --file Root label option is a file path -F, --representation-element-filter=Invocable URI Invocable URI of a representation element filter URIs are resolved relative to the current directory -h, --help Show this help message and exit. -P, --position=&lt;insertionIndex&gt; Insertion position Defaults to 0 --protocol-resource-factory=&lt;String=Class&gt; Maps protocol to resource factory class -r, --root-label=&lt;rootLabel&gt; Root label URL or file path, resolved relative to the current directory -R, --add-to-root Add labels to the root even if the principal is present --ref-base-uri=&lt;refBase&gt; Base URI for resolving documentation and prototype references. Resolved relative to the document URI -V, --version Print version information and exit. -x, --index=&lt;indexName&gt; Index file name, defaults to index.html Commands: crew-ai - Generates CrewAI code and configuration from a model save - Saves model to a file site - Generates HTML site Example drawio diagram.drawio html-app -r root-action.yml --add-to-root site -r=-1 -F page-template.yml docs Parent drawio command loads diagram.drawio diagram resource This command: Generates an html application model from the diagram elements Loads a root action from root-action.yml resource Adds the generated labels to the root action Passes the resulting model to the site sub-command to generate a documentation site Diagram element configuration ? Diagram elements can be configured with the following properties: documentation - documentation text in documentation format doc-format - explicitly specified documentation format for documentation and doc-ref. Out of the box: markdown (default), html text doc-ref - URI of a documentation resource resolved relative to the URI of the diagram file. Documentation format is derived from the URI extension, defaulting to markdown. Use doc-format to override. icon - diagram element icon URL resolved relative to the diagram file. If there is no slash (/) in the icon name then it is treated as a CSS style, e.g. fas fa-user. For image diagram elements icons are derived from element images. It is recommended to use SVG 20x20 OR 18x18 pixels for icons because they are also used in page titles and PNG images get blurry when scaled up. parent - Connection property with values source or target. Use to generate documentation from mind maps where parent/child relationship is defined by connections, not by containment. prototype &amp; proto-ref ? YAML specification of html application action, link or label. See load specifications of respective model elements for supported configuration keys. If both properties are specified, prototype takes precedence over proto-ref. With prototypes you can: Generate complex site pages (actions) with children, navigation, sections, &hellip; Reuse action models. For example, generate an action model from one diagram and use it as a prototype for an element of another diagram. Or generate an action model for CLI or Ecore documentation. role - action/page role: anonymous (default for connections) child (default for nodes) navigation section sort-key - By default generated pages (actions) are sorted alphabetically by title. This property can be used to customize sorting. If it is set then pages are sorted first by the property value and then by page title. title - By default the element label is used as page title (action text). Use this property to explicitly set the page title. For example, for elements with long labels. Site pages are generated only for elements with: Documentation (documentation or doc-ref), prototypes (prototype or prototype-ref), or both. Labels or title property. If you don&rsquo;t want an element label to be visible (e.g. on connections) uncheck &ldquo;Font color&rdquo; checkbox on the &ldquo;Text&rdquo; tab. prototype If your top-level diagram page is generated as a principal action and the root action or link references some external site, e.g. your company site, then you need to use the following prototype for proper generation: Action:\n  location: ${base-uri}index.html\n Below is an example of a prototype which defines a navigation action: Action:\n    navigation:\n      - Action:\n          location: about-wendy.html\n          icon: fas fa-help\n          text: About\n          content:\n            Interpolator:\n              source:\n                exec.content.Text: |    \n                  This is an example of a page from an action prototype.\n proto-ref Property value is a URI of the prototype action or label resolved relative to the element base URI. For example bob-prototype.yml#/. icon Drawio has more than two thousand built-in icons. You can find more icons on the below sites: Font Awesome 5 icons FlatIcons - 16.8 million icons. Free with attribution, a paid plan is available - no attribution. In-browser editor. PNG and SVG (premium) formats. IconFinder - the world&rsquo;s largest marketplace for icons, &hellip; 6 million icons at your fingertips including free icons. Multiple subscription levels. Icons8 - more than a million icons in 47 styles. Free and subscription. Icons can be edited in-place before downloading. Iconduck - more than 250 000 free open source icons Techicons - SVG and PNG tech icons, sourced from https://github.com/devicons/devicon. 473 icons. Cloud providers: Azure AWS Element ID Element IDs are used to construct element page URLs. Element IDs are generated as long random strings. They are editable - double-click on the ID at the top of the data dialog. So, if you&rsquo;d like to have semantic URLs - customize the IDs. Page and element links You may link elements to pages and other element using the extended link syntax. When an element links to a page, the page root1 is logically merged with the linking element and page elements (except elements liking to other elements) become logical children of the linking element. If an element links to another element, then that element is not considered a logical child of the page/root/page linking element. The link chain is traversed and the diagram element on the generated site is linked to the page of the link target element if that element has a page (i.e. it is documented). Otherwise there is no link. Multiple top-level pages A top-level diagram page is a page that is not linked from any diagram element. If there is more than one top-level page, add a principal action to the root-action.yml and link pages to the principal action. Examples: Beyond Diagrams Illustrations Declarative Command Pipelines See Drawio API ? Options -F, --representation-element-filter Invocable URI returning an instance of RepresentationElementFilter. Groovy example - bob-decorator.groovy from Bob The Builder demo adds a border to the Bob icon: import org.nasdanika.models.app.graph.drawio.RepresentationElementFilter;\nimport org.nasdanika.common.ProgressMonitor;\nimport org.nasdanika.drawio.Element;\nimport org.nasdanika.drawio.ModelElement;\nimport org.nasdanika.graph.processor.ProcessorInfo;\nimport org.nasdanika.models.app.graph.WidgetFactory;\nimport org.nasdanika.capability.CapabilityFactory.Loader\n\n// Script arguments for reference\nLoader loader = args[0];\nProgressMonitor loaderProgressMonitor = args[1];\nObject data = args[2]; // From fragment\n\nnew RepresentationElementFilter() {\n\n    @Override\n    void filterRepresentationElement(\n            ModelElement sourceElement, \n            ModelElement representationElement,\n            Map&lt;Element, ProcessorInfo&lt;WidgetFactory&gt;&gt; registry, ProgressMonitor progressMonitor) {\n\n        if (&quot;Bob&quot;.equals(representationElement.getLabel())) {\n            representationElement.style(&quot;imageBorder&quot;, &quot;default&quot;);\n        }\n    }\n    \n}\n -r, --root-label -x, --index You may change the file extension if you need to generate server pages (PHP, JSP, ASPX) with additional functionality such as authentication. For example, you may change the extension to php to add authentication and other dynamic behavior with -x index.php option. Internet Banking System PHP demo shows how do so. If you use generated search, also add -x &lt;extension&gt; option to the site command so the generated pages are included into the search index, e.g. -x php. To add contents before the &lt;html&gt; opening tag use prolog configuration key in page template. E.g.:   prolog:\n    content.Text: |\n      &lt;?php\n        ... php code here ...\n      ?&gt;\n You can also use epilog to add content after the &lt;/html&gt; closing tag. If you use search and glossary, change their extensions too. This technique can be used to publish generated sites to SharePoint - change the extension to aspx. -F, --representation-element-filter Invocable URI returning an instance of RepresentationElementFilter. Groovy example - bob-decorator.groovy from Bob The Builder demo adds a border to the Bob icon: import org.nasdanika.models.app.graph.drawio.RepresentationElementFilter;\nimport org.nasdanika.common.ProgressMonitor;\nimport org.nasdanika.drawio.Element;\nimport org.nasdanika.drawio.ModelElement;\nimport org.nasdanika.graph.processor.ProcessorInfo;\nimport org.nasdanika.models.app.graph.WidgetFactory;\nimport org.nasdanika.capability.CapabilityFactory.Loader\n\n// Script arguments for reference\nLoader loader = args[0];\nProgressMonitor loaderProgressMonitor = args[1];\nObject data = args[2]; // From fragment\n\nnew RepresentationElementFilter() {\n\n    @Override\n    void filterRepresentationElement(\n            ModelElement sourceElement, \n            ModelElement representationElement,\n            Map&lt;Element, ProcessorInfo&lt;WidgetFactory&gt;&gt; registry, ProgressMonitor progressMonitor) {\n\n        if (&quot;Bob&quot;.equals(representationElement.getLabel())) {\n            representationElement.style(&quot;imageBorder&quot;, &quot;default&quot;);\n        }\n    }\n    \n}\n -r, --root-label -x, --index You may change the file extension if you need to generate server pages (PHP, JSP, ASPX) with additional functionality such as authentication. For example, you may change the extension to php to add authentication and other dynamic behavior with -x index.php option. Internet Banking System PHP demo shows how do so. If you use generated search, also add -x &lt;extension&gt; option to the site command so the generated pages are included into the search index, e.g. -x php. To add contents before the &lt;html&gt; opening tag use prolog configuration key in page template. E.g.:   prolog:\n    content.Text: |\n      &lt;?php\n        ... php code here ...\n      ?&gt;\n You can also use epilog to add content after the &lt;/html&gt; closing tag. If you use search and glossary, change their extensions too. This technique can be used to publish generated sites to SharePoint - change the extension to aspx. Invocable URI returning an instance of RepresentationElementFilter. Groovy example - bob-decorator.groovy from Bob The Builder demo adds a border to the Bob icon: import org.nasdanika.models.app.graph.drawio.RepresentationElementFilter;\nimport org.nasdanika.common.ProgressMonitor;\nimport org.nasdanika.drawio.Element;\nimport org.nasdanika.drawio.ModelElement;\nimport org.nasdanika.graph.processor.ProcessorInfo;\nimport org.nasdanika.models.app.graph.WidgetFactory;\nimport org.nasdanika.capability.CapabilityFactory.Loader\n\n// Script arguments for reference\nLoader loader = args[0];\nProgressMonitor loaderProgressMonitor = args[1];\nObject data = args[2]; // From fragment\n\nnew RepresentationElementFilter() {\n\n    @Override\n    void filterRepresentationElement(\n            ModelElement sourceElement, \n            ModelElement representationElement,\n            Map&lt;Element, ProcessorInfo&lt;WidgetFactory&gt;&gt; registry, ProgressMonitor progressMonitor) {\n\n        if (&quot;Bob&quot;.equals(representationElement.getLabel())) {\n            representationElement.style(&quot;imageBorder&quot;, &quot;default&quot;);\n        }\n    }\n    \n}  You may change the file extension if you need to generate server pages (PHP, JSP, ASPX) with additional functionality such as authentication. For example, you may change the extension to php to add authentication and other dynamic behavior with -x index.php option. Internet Banking System PHP demo shows how do so. If you use generated search, also add -x &lt;extension&gt; option to the site command so the generated pages are included into the search index, e.g. -x php. To add contents before the &lt;html&gt; opening tag use prolog configuration key in page template. E.g.:   prolog:\n    content.Text: |\n      &lt;?php\n        ... php code here ...\n      ?&gt;\n You can also use epilog to add content after the &lt;/html&gt; closing tag. If you use search and glossary, change their extensions too. This technique can be used to publish generated sites to SharePoint - change the extension to aspx.","timestamp":1750179868229},"help/index.html":{"link-uuid":"19602355-e174-4a3e-8746-ff61ae25d277","title":"help","content":"Usage: nsd help [-ahHV] [-l=&lt;level&gt;] [-o=&lt;output&gt;] [COMMAND] Outputs usage for all registred commands -a, --action-model Output to action model -h, --help Show this help message and exit. -H, --html Output to HTML -l, --header-level=&lt;level&gt; Starting level for HTML header tags in HTML output, the default value is 1. -o, --output=&lt;output&gt; Output file -V, --version Print version information and exit. Commands: site - Generates help HTML site","timestamp":1750179868373},"help/site/index.html":{"path":"help/site","link-uuid":"5c61421d-7098-426a-9ed6-c196faff1f54","title":"site","content":"Usage: nsd help site [-hlV] [--progress-console] [--progress-data] [--progress-json] [-b=&lt;baseDir&gt;] [-m=&lt;domian&gt;] [-P=&lt;parallelism&gt;] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [-r=&lt;pageErrors&gt;] [--root-action-icon=&lt;rootActionIcon&gt;] [--root-action-location=&lt;rootActionLocation&gt;] [--root-action-text=&lt;rootActionText&gt;] [-t=&lt;timeout&gt;] [-T=&lt;pageTemplate&gt;] [-w=&lt;workDir&gt;] [-c=&lt;String=String&gt;]... [-C=URL]... [--command-path=&lt;commandPath&gt;[, &lt;commandPath&gt;...]]... [-M=&lt;String=String&gt;]... [-e [=&lt;excludes&gt;...]]... [-i[=&lt;includes&gt;...]]... &lt;output&gt; Generates help HTML site &lt;output&gt; Output directory -b, --base-dir=&lt;baseDir&gt; Base directory -c, --context-entry=&lt;String=String&gt; Context entries. Shadow entries in contexts and mounts. -C, --context=URL Context resource URL relative to the current directory. YAML, JSON, or properties. In properties dots are treated as key path separators. Type is inferred from the content type header, if it is present, or extension. Contexts are composed in the order of definition, later context entries shadowing the former --command-path=&lt;commandPath&gt;[,&lt;commandPath&gt;...] Comma-separated list of command names help is generated for the last command in the path -e, --exclude[=&lt;excludes&gt;...] Output directory clean excludes Ant pattern -h, --help Show this help message and exit. -i, --include[=&lt;includes&gt;...] Output directory clean includes Ant pattern -l, --[no-]clean Clean working directory defaults to true -m, --domain=&lt;domian&gt; Sitemap domain -M, --context-mount=&lt;String=String&gt; MappingContext resource URL relative to the current directory. YAML, JSON, or properties. In properties dots are treated as key path separators. Type is inferred from the content type header, if it is present, or extension. Mounts shadow context entries. -P, --parallelism=&lt;parallelism&gt; If the value greater than one then an executor service is created and injected into the context to allow concurrent execution. --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -r, --errors=&lt;pageErrors&gt; Expected number of page errors -1 for any (not fail on errors) default is 0 --root-action-icon=&lt;rootActionIcon&gt; Root action icon --root-action-location=&lt;rootActionLocation&gt; Root action location --root-action-text=&lt;rootActionText&gt; Root action text -t, --timeout=&lt;timeout&gt; If parallelism is greater than one this option specifies timout in seconds awaiting completion of execution. Default value is 60. -T, --page-template=&lt;pageTemplate&gt; Page template URI relative to the current directory -V, --version Print version information and exit. -w, --work-dir=&lt;workDir&gt; Working directory Exit codes: Non-negative number Delegate result -1 Unhandled exception during execution -2 Invalid input -3 Diagnostic failed -4 Execution failed or was cancelled, successful rollback -5 Execution failed or was cancelled, rollback failed -6 Executor service termination timed out Example help site --page-template=&quot;page-template.yml#/&quot; --root-action-icon=https://docs.nasdanika.org/images/nasdanika-logo.png --root-action-location=https://github.com/Nasdanika-Demos --root-action-text=&quot;Nasdanika Demos&quot; target/doc-site\n Options --command-path Use this option if you want to generate help not for the root command, but for a sub-command. --command-path Use this option if you want to generate help not for the root command, but for a sub-command. Use this option if you want to generate help not for the root command, but for a sub-command.","timestamp":1750179868379},"gsh/index.html":{"link-uuid":"2574a328-9c27-4fe7-a98e-1b025280c063","title":"gsh","content":"Version: org.nasdanika.groovy@2025.6.0 Usage: nsd gsh [-hV] [--progress-console] [--progress-data] [--progress-json] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [-p=&lt;String=String&gt;]... [-P=URL]... [&lt;args&gt;...] Groovy Shell [&lt;args&gt;...] Argument URIs -h, --help Show this help message and exit. -p, --property=&lt;String=String&gt; Property -P, --properties=URL Properties resource URL relative to the current directory. YAML, JSON, or properties. Type is inferred from the content type header, if it is present, or extension. Properties are loaded in the order of definition, later properties replacing the former --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -V, --version Print version information and exit.","timestamp":1750179868368},"gitlab/contribute/retrospect/invoke/index.html":{"path":"gitlab/contribute/retrospect/invoke","link-uuid":"ed0fecc2-634b-4753-8079-1faa23685cca","title":"invoke","content":"Version: org.nasdanika.cli@2025.6.0 Usage: nsd gitlab contribute retrospect invoke [-fhV] [--progress-console] [--progress-data] [--progress-json] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [-p=&lt;String=String&gt;]... [-P=URL]... &lt;uri&gt; [&lt;bindings&gt;...] Invokes URI &lt;uri&gt; URI to invoke [&lt;bindings&gt;...] Bindings URIs -f, --file URI parameter is a file path -h, --help Show this help message and exit. -p, --property=&lt;String=String&gt; Property -P, --properties=URL Properties resource URL relative to the current directory. YAML, JSON, or properties. Type is inferred from the content type header, if it is present, or extension. Properties are loaded in the order of definition, later properties replacing the former --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -V, --version Print version information and exit. Loads an invocable from a URI as explained in Loading Invocables from URIs and then invokes it with arguments obtained from parameters invocable URIs.","timestamp":1750179868345},"list-rules/index.html":{"link-uuid":"1cc3a9f2-6aef-4efa-809c-60ca59fd97d5","title":"list-rules","content":"Version: org.nasdanika.launcher.demo@2025.6.0 Usage: nsd list-rules [-hV] [-o=&lt;output&gt;] [--exclude-rule [=&lt;ruleExcludes&gt;...]]... [--exclude-rule-set [=&lt;ruleSetExcludes&gt;...]]... [--include-rule [=&lt;ruleIncludes&gt;...]]... [--include-rule-set [=&lt;ruleSetIncludes&gt;...]]... Lists available rules --exclude-rule[=&lt;ruleExcludes&gt;...] ID's of rules to exclude --exclude-rule-set[=&lt;ruleSetExcludes&gt;...] ID's of rule sets to exclude -h, --help Show this help message and exit. --include-rule[=&lt;ruleIncludes&gt;...] ID's of rules to include --include-rule-set[=&lt;ruleSetIncludes&gt;...] ID's of rule sets to include -o, --output=&lt;output&gt; Output file -V, --version Print version information and exit.","timestamp":1750179868434},"inspect-yaml/index.html":{"link-uuid":"2d13d035-4aa1-4067-9593-704f79779796","title":"inspect-yaml","content":"Version: org.nasdanika.launcher.demo@2025.6.0 Usage: nsd inspect-yaml [-hV] [--parallel] [--progress-console] [--progress-data] [--progress-json] [--stop-on-first-fail] [--limit=&lt;limit&gt;] [-o=&lt;output&gt;] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [-c=&lt;String=String&gt;]... [-C=URL]... [--content-type-resource-factory=&lt;String=Class&gt;]... [--extension-resource-factory=&lt;String=Class&gt;]... [-f=&lt;failOnSeverities&gt;]... [-M=&lt;String=String&gt;]... [--protocol-resource-factory=&lt;String=Class&gt;]... [-e [=&lt;resourceExcludes&gt;...]]... [--exclude-rule [=&lt;ruleExcludes&gt;...]]... [--exclude-rule-set [=&lt;ruleSetExcludes&gt;...]]... [--exclude-type [=&lt;typeExcludes&gt;...]]... [-i [=&lt;resourceIncludes&gt;...]]... [--include-rule [=&lt;ruleIncludes&gt;...]]... [--include-rule-set [=&lt;ruleSetIncludes&gt;...]]... [--include-type [=&lt;typeIncludes&gt;...]]... &lt;inputs&gt;... Demo of YAML inspection &lt;inputs&gt;... Files and directories to inspect -c, --context-entry=&lt;String=String&gt; Context entries. Shadow entries in contexts and mounts. -C, --context=URL Context resource URL relative to the current directory. YAML, JSON, or properties. In properties dots are treated as key path separators. Type is inferred from the content type header, if it is present, or extension. Contexts are composed in the order of definition, later context entries shadowing the former --content-type-resource-factory=&lt;String=Class&gt; Maps content type to resource factory class -e, --exclude-resource[=&lt;resourceExcludes&gt;...] Resources to exclude from inspection Ant pattern --exclude-rule[=&lt;ruleExcludes&gt;...] ID's of rules to exclude --exclude-rule-set[=&lt;ruleSetExcludes&gt;...] ID's of rule sets to exclude --exclude-type[=&lt;typeExcludes&gt;...] Target types to exclude --extension-resource-factory=&lt;String=Class&gt; Maps extension to resource factory class -f, --fail-on=&lt;failOnSeverities&gt; Names of severities to fail on -h, --help Show this help message and exit. -i, --include-resource[=&lt;resourceIncludes&gt;...] Resources to include in inspection Ant pattern --include-rule[=&lt;ruleIncludes&gt;...] ID's of rules to include --include-rule-set[=&lt;ruleSetIncludes&gt;...] ID's of rule sets to include --include-type[=&lt;typeIncludes&gt;...] Target types to include --limit=&lt;limit&gt; Max number of results to report -M, --context-mount=&lt;String=String&gt; MappingContext resource URL relative to the current directory. YAML, JSON, or properties. In properties dots are treated as key path separators. Type is inferred from the content type header, if it is present, or extension. Mounts shadow context entries. -o, --output=&lt;output&gt; Output file --parallel Parallel inspection --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor --protocol-resource-factory=&lt;String=Class&gt; Maps protocol to resource factory class --stop-on-first-fail Stop on first failure -V, --version Print version information and exit.","timestamp":1750179868396},"model/html-app/index.html":{"path":"model/html-app","link-uuid":"d3e455e4-77e4-4304-b0c4-55767e9792c0","title":"html-app","content":"Version: org.nasdanika.models.ecore.cli@2025.6.0 Usage: nsd model html-app [-fhRV] [-P=&lt;insertionIndex&gt;] [-r=&lt;rootLabel&gt;] [-c=&lt;String=String&gt;]... [-C=URL]... [--content-type-resource-factory=&lt;String=Class&gt;]... [--extension-resource-factory=&lt;String=Class&gt;]... [-M=&lt;String=String&gt;]... [--protocol-resource-factory=&lt;String=Class&gt;]... [COMMAND] Generates html application model from a model with links to type documentation -c, --context-entry=&lt;String=String&gt; Context entries. Shadow entries in contexts and mounts. -C, --context=URL Context resource URL relative to the current directory. YAML, JSON, or properties. In properties dots are treated as key path separators. Type is inferred from the content type header, if it is present, or extension. Contexts are composed in the order of definition, later context entries shadowing the former --content-type-resource-factory=&lt;String=Class&gt; Maps content type to resource factory class --extension-resource-factory=&lt;String=Class&gt; Maps extension to resource factory class -f, --file Root label option is a file path -h, --help Show this help message and exit. -M, --context-mount=&lt;String=String&gt; MappingContext resource URL relative to the current directory. YAML, JSON, or properties. In properties dots are treated as key path separators. Type is inferred from the content type header, if it is present, or extension. Mounts shadow context entries. -P, --position=&lt;insertionIndex&gt; Insertion position Defaults to 0 --protocol-resource-factory=&lt;String=Class&gt; Maps protocol to resource factory class -r, --root-label=&lt;rootLabel&gt; Root label URL or file path, resolved relative to the current directory -R, --add-to-root Add labels to the root even if the principal is present -V, --version Print version information and exit. Commands: crew-ai - Generates CrewAI code and configuration from a model save - Saves model to a file site - Generates HTML site Options -r, --root-label -r, --root-label ","timestamp":1750179868449},"java/index.html":{"link-uuid":"f2baf3ca-a660-453c-ac12-f94264570328","title":"java","content":"Version: org.nasdanika.models.java.cli@2025.6.0 Usage: nsd java [-hV] [COMMAND] Commands related to Java -h, --help Show this help message and exit. -V, --version Print version information and exit. Commands: junit - Generates JUnit tests","timestamp":1750179868404},"chat-server/index.html":{"link-uuid":"e8a9f9f0-ba1a-45b7-b5ee-844207a68d4d","title":"chat-server","content":"Usage: nsd chat-server [-hV] [--[no-]console] [--[no-]exact] [--distance-threshold=&lt;distanceThreshold&gt;] [--http-host=&lt;httpHost&gt;] [--http-port=&lt;httpPort&gt;] [--http-server-shutdown-timeout=&lt;timeout&gt;] [--number-of-items=&lt;numberOfItems&gt;] [--open=&lt;uriToOpen&gt;] &lt;index&gt; &lt;textMap&gt; Serves HTTP routes for AI chat &lt;index&gt; Index file &lt;textMap&gt; Text map --[no-]console If true, starts a console and waits for the exit command, otherwise creates a shutdown hook disposing the server --distance-threshold=&lt;distanceThreshold&gt; Distance theshold, results with the distance above the threshold are discarded. If there are no results below the threshold 'No matches' is displayed in the chat Defaults to 0.25 --[no-]exact If true (default) the index is exact Set to false if you have a large number of index entries to improve performance -h, --help Show this help message and exit. --http-host=&lt;httpHost&gt; HTTP host (network interface) to bind to --http-port=&lt;httpPort&gt; HTTP port. If a port is not specified, an ephemeral port is used --http-server-shutdown-timeout=&lt;timeout&gt; Timeout in seconds, defaults to 3 seconds --number-of-items=&lt;numberOfItems&gt; Number of semantic search items to return Defaults to 10 --open=&lt;uriToOpen&gt; Opens provided URI in the system browser the URI is resolved relative to http://localhost:&lt;port&gt;/ -V, --version Print version information and exit.","timestamp":1750179868205},"pdf-indexer/index.html":{"link-uuid":"b7c481b0-9640-4568-9e1b-923abbcb9db0","title":"pdf-indexer","content":"Version: org.nasdanika.launcher.demo@2025.6.0 Usage: nsd pdf-indexer [-hV] [--granularity=&lt;granularity&gt;] [[--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [--progress-json] [--progress-console] [--progress-data]] [[--chunk-size=&lt;chunkSize&gt;] [--chunks-overlap=&lt;chunksOverlap&gt;] [--chunk-encoding-type=&lt;encodingType&gt;]] [[--embeddings-provider=&lt;embeddingsProvider&gt;] [--embeddings-model=&lt;embeddingsModel&gt;] [--embeddings-version=&lt;embeddingsVersion&gt;]] [[--hnsw-ef=&lt;ef&gt;] [--hnsw-ef-contruction=&lt;efConstruction&gt;] [--hnsw-m=&lt;m&gt;] [--hnsw-remove-enabled] [--hnsw-threads=&lt;threads&gt;] [--hnsw-progress-update-interval=&lt;progressUpdateInterval&gt; ] [--hnsw-distance-function=&lt;distanceFunction&gt;] [--hnsw-normalize]] &lt;output&gt; &lt;textMap&gt; &lt;String=File&gt;... Creates a vector index and a URI -&gt; text mapping from a PDF file or a directory of PDF files &lt;output&gt; Index output file &lt;textMap&gt; URI to plain text map JSON output &lt;String=File&gt;... Input &lt;base uri&gt;=&lt;file or directory&gt; --granularity=&lt;granularity&gt; Text granularity Valid values: document, page, article, paragraph Default value: page -h, --help Show this help message and exit. -V, --version Print version information and exit. Progress monitor --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor Chunking --chunk-encoding-type=&lt;encodingType&gt; Chunk encoding type Valid values: R50K_BASE, P50K_BASE, P50K_EDIT, CL100K_BASE, O200K_BASE Default value: CL100K_BASE --chunk-size=&lt;chunkSize&gt; Chunk size in tokens --chunks-overlap=&lt;chunksOverlap&gt; Chunks overlap in tokens Embeddings --embeddings-model=&lt;embeddingsModel&gt; Embeddings model --embeddings-provider=&lt;embeddingsProvider&gt; Embeddings provider --embeddings-version=&lt;embeddingsVersion&gt; Embeddings version Vector index --hnsw-distance-function=&lt;distanceFunction&gt; Vector distance function Valid values: BRAY_CURTIS, CANBERRA, CORRELATION, COSINE, EUCLIDEAN, INNER_PRODUCT, MANHATTAN, VECTOR_FLOAT_128_BRAY_CURTIS, VECTOR_FLOAT_128_CANBERRA, VECTOR_FLOAT_128_COSINE, VECTOR_FLOAT_128_EUCLIDEAN, VECTOR_FLOAT_128_INNER_PRODUCT, VECTOR_FLOAT_128_MANHATTAN, VECTOR_FLOAT_256_BRAY_CURTIS, VECTOR_FLOAT_256_CANBERRA, VECTOR_FLOAT_256_COSINE, VECTOR_FLOAT_256_EUCLIDEAN, VECTOR_FLOAT_256_INNER_PRODUCT, VECTOR_FLOAT_256_MANHATTAN Default value: COSINE --hnsw-ef=&lt;ef&gt; Size of the dynamic list for the nearest neighbors Default value: 200 --hnsw-ef-contruction=&lt;efConstruction&gt; Controls the index time / index precision Default value: 200 --hnsw-m=&lt;m&gt; The number of bi-directional links created for every new element during construction Default value: 16 --hnsw-normalize If true, vectors are normalized --hnsw-progress-update-interval=&lt;progressUpdateInterval&gt; After indexing this many items progress will be reported. The last element will always be reported regardless of this setting. Default value: 100000 --hnsw-remove-enabled If true, removal from the index is enabled --hnsw-threads=&lt;threads&gt; Number of threads to use for parallel indexing Default to the number of available processors Options --hnsw-ef The size of the dynamic list for the nearest neighbors (used during the search). Higher ef leads to more accurate but slower search. The value ef of can be anything between k (number of items to return from search) and the size of the dataset. --hnsw-ef-contruction The option has the same meaning as --hnsw-ef, but controls the index time / index precision. Bigger ef-construction leads to longer construction, but better index quality. At some point, increasing ef-construction does not improve the quality of the index. One way to check if the selection of ef-construction was ok is to measure a recall for M nearest neighbor search when ef = ef-construction: if the recall is lower than 0.9, then there is room for improvement. --hnsw-m Sets the number of bi-directional links created for every new element during construction. Reasonable range for m is 2-100. Higher m work better on datasets with high intrinsic dimensionality and/or high recall, while low m work better for datasets with low intrinsic dimensionality and/or low recalls. The parameter also determines the algorithm&rsquo;s memory consumption. As an example for d = 4 random vectors optimal m for search is somewhere around 6, while for high dimensional datasets (word embeddings, good face descriptors), higher m are required (e.g. m = 48, 64) for optimal performance at high recall. The range m = 12-48 is ok for the most of the use cases. When m is changed one has to update the other parameters. Nonetheless, ef and efConstruction parameters can be roughly estimated by assuming that m efConstruction is a constant1. m javadoc ? --hnsw-ef The size of the dynamic list for the nearest neighbors (used during the search). Higher ef leads to more accurate but slower search. The value ef of can be anything between k (number of items to return from search) and the size of the dataset. --hnsw-ef-contruction The option has the same meaning as --hnsw-ef, but controls the index time / index precision. Bigger ef-construction leads to longer construction, but better index quality. At some point, increasing ef-construction does not improve the quality of the index. One way to check if the selection of ef-construction was ok is to measure a recall for M nearest neighbor search when ef = ef-construction: if the recall is lower than 0.9, then there is room for improvement. --hnsw-m Sets the number of bi-directional links created for every new element during construction. Reasonable range for m is 2-100. Higher m work better on datasets with high intrinsic dimensionality and/or high recall, while low m work better for datasets with low intrinsic dimensionality and/or low recalls. The parameter also determines the algorithm&rsquo;s memory consumption. As an example for d = 4 random vectors optimal m for search is somewhere around 6, while for high dimensional datasets (word embeddings, good face descriptors), higher m are required (e.g. m = 48, 64) for optimal performance at high recall. The range m = 12-48 is ok for the most of the use cases. When m is changed one has to update the other parameters. Nonetheless, ef and efConstruction parameters can be roughly estimated by assuming that m efConstruction is a constant1. m javadoc ? The size of the dynamic list for the nearest neighbors (used during the search). Higher ef leads to more accurate but slower search. The value ef of can be anything between k (number of items to return from search) and the size of the dataset. The option has the same meaning as --hnsw-ef, but controls the index time / index precision. Bigger ef-construction leads to longer construction, but better index quality. At some point, increasing ef-construction does not improve the quality of the index. One way to check if the selection of ef-construction was ok is to measure a recall for M nearest neighbor search when ef = ef-construction: if the recall is lower than 0.9, then there is room for improvement. Sets the number of bi-directional links created for every new element during construction. Reasonable range for m is 2-100. Higher m work better on datasets with high intrinsic dimensionality and/or high recall, while low m work better for datasets with low intrinsic dimensionality and/or low recalls. The parameter also determines the algorithm&rsquo;s memory consumption. As an example for d = 4 random vectors optimal m for search is somewhere around 6, while for high dimensional datasets (word embeddings, good face descriptors), higher m are required (e.g. m = 48, 64) for optimal performance at high recall. The range m = 12-48 is ok for the most of the use cases. When m is changed one has to update the other parameters. Nonetheless, ef and efConstruction parameters can be roughly estimated by assuming that m efConstruction is a constant1. m javadoc ?","timestamp":1750179868493},"drawio/html-app/crew-ai/index.html":{"path":"drawio/html-app/crew-ai","link-uuid":"4c17d67a-4df5-4ded-9aac-3b93805ca202","title":"crew-ai","content":"Version: org.nasdanika.models.crewai.cli@2025.6.0 Usage: nsd drawio html-app crew-ai [-hV] [--progress-console] [--progress-data] [--progress-json] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [--content-type-resource-factory=&lt;String=Clas s&gt;]... [--extension-resource-factory=&lt;String=Class&gt;] ... [--protocol-resource-factory=&lt;String=Class&gt;]. .. &lt;output&gt; Generates CrewAI code and configuration from a model &lt;output&gt; Crew class output file --content-type-resource-factory=&lt;String=Class&gt; Maps content type to resource factory class --extension-resource-factory=&lt;String=Class&gt; Maps extension to resource factory class -h, --help Show this help message and exit. --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor --protocol-resource-factory=&lt;String=Class&gt; Maps protocol to resource factory class -V, --version Print version information and exit.","timestamp":1750179868211},"shell/index.html":{"link-uuid":"e0d10cc7-57a4-49f5-8681-16c63ea94fdb","title":"shell","content":"Usage: nsd shell [-hV] Starts an interactive shell or executes commands from input files or URL's -h, --help Show this help message and exit. -V, --version Print version information and exit.","timestamp":1750179868516},"module-graph/index.html":{"link-uuid":"57a70a20-83fe-4518-9bfe-316d52a440f0","title":"module-graph","content":"Version: org.nasdanika.launcher.demo@2025.6.0 Usage: nsd module-graph [-h=&lt;height&gt;] [-t=&lt;template&gt;] [-w=&lt;width&gt;] [-e=&lt;excludeModules&gt;]... [-i=&lt;includeModules&gt;]... &lt;output&gt; Generates module dependency graph &lt;output&gt; Output file -e, --exclude-modules=&lt;excludeModules&gt; Modules to exclude Supports .* and .** patterns -h, --height=&lt;height&gt; Layout height, defaults to 1500 -i, --include-modules=&lt;includeModules&gt; Modules to include Supports .* and .** patterns -t, --template=&lt;template&gt; HTML page template -w, --width=&lt;width&gt; Layout width, defaults to 2000","timestamp":1750179868475},"model/index.html":{"link-uuid":"90b21ab0-aeef-4270-b2c8-9b3623b1d689","title":"model","content":"Version: org.nasdanika.emf@2025.6.0 Usage: nsd model [-fhV] [--content-type-resource-factory=&lt;String=Class&gt;]... [--extension-resource-factory=&lt;String=Class&gt;]... [--protocol-resource-factory=&lt;String=Class&gt;]... &lt;uri&gt; [COMMAND] Loads EObject from a URI or file &lt;uri&gt; EObject URI or file path, resolved relative to the current directory --content-type-resource-factory=&lt;String=Class&gt; Maps content type to resource factory class --extension-resource-factory=&lt;String=Class&gt; Maps extension to resource factory class -f, --file URI parameter is a file path -h, --help Show this help message and exit. --protocol-resource-factory=&lt;String=Class&gt; Maps protocol to resource factory class -V, --version Print version information and exit. Commands: crew-ai - Generates CrewAI code and configuration from a model html-app - Generates html application model from a model save - Saves model to a file","timestamp":1750179868466},"gitlab/contribute/retrospect/gsh/index.html":{"path":"gitlab/contribute/retrospect/gsh","link-uuid":"938d5b74-a3df-4dcc-abd1-fe363a03e133","title":"gsh","content":"Version: org.nasdanika.groovy@2025.6.0 Usage: nsd gitlab contribute retrospect gsh [-hV] [--progress-console] [--progress-data] [--progress-json] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [-p=&lt;String=String&gt;]... [-P=URL]... [&lt;args&gt;...] Groovy Shell [&lt;args&gt;...] Argument URIs -h, --help Show this help message and exit. -p, --property=&lt;String=String&gt; Property -P, --properties=URL Properties resource URL relative to the current directory. YAML, JSON, or properties. Type is inferred from the content type header, if it is present, or extension. Properties are loaded in the order of definition, later properties replacing the former --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -V, --version Print version information and exit.","timestamp":1750179868335},"list-models/index.html":{"link-uuid":"ba34348d-ac35-4939-a5d6-d0fc4f5dc336","title":"list-models","content":"Usage: nsd list-models [-hV] Lists available AI models -h, --help Show this help message and exit. -V, --version Print version information and exit.","timestamp":1750179868430},"gitlab/index.html":{"link-uuid":"80ffe068-dbc3-44db-8e35-b44f116521de","title":"gitlab","content":"Usage: nsd gitlab [-hV] [-l=&lt;clientRateLimit&gt;] [-t=&lt;accessToken&gt;] [-u=&lt;url&gt;] [-w=&lt;clientRateLimitWindow&gt;] [COMMAND] Commands for working with GitLab -h, --help Show this help message and exit. -l, --client-rate-limit=&lt;clientRateLimit&gt; Client enforced rate limit use this option if the server limits requests rate, but does not rate limit headers to the client only errors if the rate limit is exceeded -t, --access-token=&lt;accessToken&gt; GitLab access token, defaults to the value of GITLAB_ACCESS_TOKEN environment variable -u, --url=&lt;url&gt; GitLab URL, defaults to the value of GITLAB_URL environment variable -V, --version Print version information and exit. -w, --client-rate-limit-window=&lt;clientRateLimitWindow&gt; Client enforced rate limit window in seconds defaults to 10 ignored if the client rate limit is not set Commands: contribute - Parent for sub-command contributing via GitLabURIHandler gsh - Groovy Shell invoke - Invokes URI","timestamp":1750179868359},"rules/index.html":{"link-uuid":"81e80d71-687b-4e16-b466-b29d4091cdb2","title":"rules","content":"Usage: nsd rules [-hV] [COMMAND] Rules commands -h, --help Show this help message and exit. -V, --version Print version information and exit. Commands: action-model - Generates rule set documentation action model list - Lists available rule sets and rules site - Generates rule set documentation site","timestamp":1750179868503},"annotated-element-provider-test/commit/index.html":{"path":"annotated-element-provider-test/commit","link-uuid":"94d1ae55-85cc-4831-9327-89040d4cb754","title":"commit","content":"Usage: nsd annotated-element-provider-test commit [--progress-console] [--progress-data] [--progress-json] [-m=&lt;arg0&gt;] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [--squash=&lt;commit&gt;] [&lt;file&gt;...] [&lt;file&gt;...] -m, --message=&lt;arg0&gt; --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor --squash=&lt;commit&gt; Parameters &lt;file&gt; File detailed description Options --squash Squash detailed description -m, --message Commit message detailed description &lt;file&gt; File detailed description File detailed description --squash Squash detailed description -m, --message Commit message detailed description Squash detailed description Commit message detailed description","timestamp":1750179868181},"gitlab/contribute/junit/jacoco/index.html":{"path":"gitlab/contribute/junit/jacoco","link-uuid":"c9cd3a49-0032-4822-a9f8-5ad2159f2856","title":"jacoco","content":"Usage: nsd gitlab contribute junit jacoco [-hV] [-c=&lt;classes&gt;] [-j=&lt;jacoco&gt;] [-m=&lt;moduleName&gt;] Loads coverage from jacoco.exec and classes directory -c, --classes=&lt;classes&gt; Classes directory path relative to the project directory, defaults to target/classes -h, --help Show this help message and exit. -j, --jacoco=&lt;jacoco&gt; jacoco.exec file path relative to the project directory, defaults to target/jacoco.exec -m, --module=&lt;moduleName&gt; Coverage module name -V, --version Print version information and exit.","timestamp":1750179868290},"drawio/html-app/site/index.html":{"path":"drawio/html-app/site","link-uuid":"54e4d6b6-2f66-4ca5-85c4-ba6f38b90597","title":"site","content":"Version: org.nasdanika.models.app.cli@2025.6.0 Usage: nsd drawio html-app site [-hlV] [--progress-console] [--progress-data] [--progress-json] [-b=&lt;baseDir&gt;] [-F=&lt;pageTemplateFile&gt;] [-m=&lt;domian&gt;] [-P=&lt;parallelism&gt;] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [-r=&lt;pageErrors&gt;] [-t=&lt;timeout&gt;] [-T=&lt;pageTemplate&gt;] [-w=&lt;workDir&gt;] [-x=&lt;extension&gt;] [-c=&lt;String=String&gt;]... [-C=URL]... [-M=&lt;String=String&gt;]... [-e [=&lt;excludes&gt;...]]... [-i[=&lt;includes&gt;...]]... &lt;output&gt; Generates HTML site &lt;output&gt; Output directory relative to the base directory -b, --base-dir=&lt;baseDir&gt; Base directory -c, --context-entry=&lt;String=String&gt; Context entries. Shadow entries in contexts and mounts. -C, --context=URL Context resource URL relative to the current directory. YAML, JSON, or properties. In properties dots are treated as key path separators. Type is inferred from the content type header, if it is present, or extension. Contexts are composed in the order of definition, later context entries shadowing the former -e, --exclude[=&lt;excludes&gt;...] Output directory clean excludes Ant pattern -F, --page-template-file=&lt;pageTemplateFile&gt; Page template file relative to the current directory -h, --help Show this help message and exit. -i, --include[=&lt;includes&gt;...] Output directory clean includes Ant pattern -l, --[no-]clean Clean working directory defaults to true -m, --domain=&lt;domian&gt; Sitemap domain -M, --context-mount=&lt;String=String&gt; MappingContext resource URL relative to the current directory. YAML, JSON, or properties. In properties dots are treated as key path separators. Type is inferred from the content type header, if it is present, or extension. Mounts shadow context entries. -P, --parallelism=&lt;parallelism&gt; If the value greater than one then an executor service is created and injected into the context to allow concurrent execution. --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -r, --errors=&lt;pageErrors&gt; Expected number of page errors -1 for any (not fail on errors) default is 0 -t, --timeout=&lt;timeout&gt; If parallelism is greater than one this option specifies timout in seconds awaiting completion of execution. Default value is 60. -T, --page-template=&lt;pageTemplate&gt; Page template URI relative to the current directory -V, --version Print version information and exit. -w, --work-dir=&lt;workDir&gt; Working directory -x, --extension=&lt;extension&gt; Extension of files to include in search and site map. Defaults to html Exit codes: Non-negative number Delegate result -1 Unhandled exception during execution -2 Invalid input -3 Diagnostic failed -4 Execution failed or was cancelled, successful rollback -5 Execution failed or was cancelled, rollback failed -6 Executor service termination timed out Example drawio diagram.drawio html-app -r root-action.yml --add-to-root site -r=-1 -F page-template.yml docs Grandparent drawio command loads diagram.drawio diagram resource Parent html-app command generates an html application model from the diagram elements This command: Loads a page template from page-template.yml Generates a documentation site ignoring page errors (-r=-1) Outputs the generated site to the docs directory Options -r, --errors -r=-1 command line option means &ldquo;don&rsquo;t fail on page errors&rdquo; such as: Blank pages Broken internal links Missing resources Missing resources are reported on pages using danger alert blocks. If you want to prevent deployment of a site with page errors, don&rsquo;t use the option or set it to the expected number of errors - there might be &ldquo;known errors&rdquo; which you are OK to live with. -T, --page-template Bootstrap Page to use as a template for site pages. In the page template file you can: Modify the theme - choose one of 20+ Bootswatch themes or the default theme. Please note that generated sites look good with light themes, and not so good (in my personal opinion) with dark themes. Set fluid to true. Modify navigation panel style See Bootstrap Page Load Specification for supported configuration keys. Sample page template in YAML: bootstrap.Page:\n  cdn: true\n  theme: Simplex\n  name: Application Page Template\n  language: EN\n  stylesheets: \n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/css/app.css \n    - https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css\n    - https://cdn.jsdelivr.net/npm/jstree@3.3.11/dist/themes/default/style.min.css\n    - https://cdn.jsdelivr.net/npm/github-markdown-css@5.1.0/github-markdown.min.css\n    - https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.3.1/build/styles/default.min.css\n    - https://cdn.jsdelivr.net/npm/bootstrap-vue@2.21.2/dist/bootstrap-vue.css\n  scripts:\n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/common.js \n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/dark-head.js \n    - https://cdn.jsdelivr.net/npm/jstree@3.3.11/dist/jstree.min.js\n    - https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.3.1/build/highlight.min.js\n    - https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js\n    - https://cdn.jsdelivr.net/npm/bootstrap-vue@2.21.2/dist/bootstrap-vue.min.js\n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/components/table.js\n    - https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js\n  body:\n    app.Page:\n      fluid: false\n      navigation-panel:\n        style: SEARCHABLE_TREE # COLLAPSIBLE_CARDS\n        collapsible: true -r, --errors -r=-1 command line option means &ldquo;don&rsquo;t fail on page errors&rdquo; such as: Blank pages Broken internal links Missing resources Missing resources are reported on pages using danger alert blocks. If you want to prevent deployment of a site with page errors, don&rsquo;t use the option or set it to the expected number of errors - there might be &ldquo;known errors&rdquo; which you are OK to live with. -T, --page-template Bootstrap Page to use as a template for site pages. In the page template file you can: Modify the theme - choose one of 20+ Bootswatch themes or the default theme. Please note that generated sites look good with light themes, and not so good (in my personal opinion) with dark themes. Set fluid to true. Modify navigation panel style See Bootstrap Page Load Specification for supported configuration keys. Sample page template in YAML: bootstrap.Page:\n  cdn: true\n  theme: Simplex\n  name: Application Page Template\n  language: EN\n  stylesheets: \n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/css/app.css \n    - https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css\n    - https://cdn.jsdelivr.net/npm/jstree@3.3.11/dist/themes/default/style.min.css\n    - https://cdn.jsdelivr.net/npm/github-markdown-css@5.1.0/github-markdown.min.css\n    - https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.3.1/build/styles/default.min.css\n    - https://cdn.jsdelivr.net/npm/bootstrap-vue@2.21.2/dist/bootstrap-vue.css\n  scripts:\n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/common.js \n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/dark-head.js \n    - https://cdn.jsdelivr.net/npm/jstree@3.3.11/dist/jstree.min.js\n    - https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.3.1/build/highlight.min.js\n    - https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js\n    - https://cdn.jsdelivr.net/npm/bootstrap-vue@2.21.2/dist/bootstrap-vue.min.js\n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/components/table.js\n    - https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js\n  body:\n    app.Page:\n      fluid: false\n      navigation-panel:\n        style: SEARCHABLE_TREE # COLLAPSIBLE_CARDS\n        collapsible: true -r=-1 command line option means &ldquo;don&rsquo;t fail on page errors&rdquo; such as: Blank pages Broken internal links Missing resources Missing resources are reported on pages using danger alert blocks. If you want to prevent deployment of a site with page errors, don&rsquo;t use the option or set it to the expected number of errors - there might be &ldquo;known errors&rdquo; which you are OK to live with. Bootstrap Page to use as a template for site pages. In the page template file you can: Modify the theme - choose one of 20+ Bootswatch themes or the default theme. Please note that generated sites look good with light themes, and not so good (in my personal opinion) with dark themes. Set fluid to true. Modify navigation panel style See Bootstrap Page Load Specification for supported configuration keys. Sample page template in YAML: bootstrap.Page:\n  cdn: true\n  theme: Simplex\n  name: Application Page Template\n  language: EN\n  stylesheets: \n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/css/app.css \n    - https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css\n    - https://cdn.jsdelivr.net/npm/jstree@3.3.11/dist/themes/default/style.min.css\n    - https://cdn.jsdelivr.net/npm/github-markdown-css@5.1.0/github-markdown.min.css\n    - https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.3.1/build/styles/default.min.css\n    - https://cdn.jsdelivr.net/npm/bootstrap-vue@2.21.2/dist/bootstrap-vue.css\n  scripts:\n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/common.js \n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/dark-head.js \n    - https://cdn.jsdelivr.net/npm/jstree@3.3.11/dist/jstree.min.js\n    - https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.3.1/build/highlight.min.js\n    - https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js\n    - https://cdn.jsdelivr.net/npm/bootstrap-vue@2.21.2/dist/bootstrap-vue.min.js\n    - https://cdn.jsdelivr.net/gh/Nasdanika-Models/html-app@master/gen/web-resources/js/components/table.js\n    - https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js\n  body:\n    app.Page:\n      fluid: false\n      navigation-panel:\n        style: SEARCHABLE_TREE # COLLAPSIBLE_CARDS\n        collapsible: true","timestamp":1750179868243},"app/site/index.html":{"path":"app/site","link-uuid":"9b124fce-5da1-4461-a6b6-c33a8df2c270","title":"site","content":"Version: org.nasdanika.models.app.cli@2025.6.0 Usage: nsd app site [-hlV] [--progress-console] [--progress-data] [--progress-json] [-b=&lt;baseDir&gt;] [-m=&lt;domian&gt;] [-P=&lt;parallelism&gt;] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [-r=&lt;pageErrors&gt;] [-t=&lt;timeout&gt;] [-T=&lt;pageTemplate&gt;] [-w=&lt;workDir&gt;] [-c=&lt;String=String&gt;]... [-C=URL]... [-M=&lt;String=String&gt;]... [-e[=&lt;excludes&gt;...]]... [-i[=&lt;includes&gt;...]]... &lt;model&gt; &lt;output&gt; Generates HTML site &lt;model&gt; Model URI, resolved relative to the current directory &lt;output&gt; Output directory -b, --base-dir=&lt;baseDir&gt; Base directory -c, --context-entry=&lt;String=String&gt; Context entries. Shadow entries in contexts and mounts. -C, --context=URL Context resource URL relative to the current directory. YAML, JSON, or properties. In properties dots are treated as key path separators. Type is inferred from the content type header, if it is present, or extension. Contexts are composed in the order of definition, later context entries shadowing the former -e, --exclude[=&lt;excludes&gt;...] Output directory clean excludes Ant pattern -h, --help Show this help message and exit. -i, --include[=&lt;includes&gt;...] Output directory clean includes Ant pattern -l, --[no-]clean Clean working directory defaults to true -m, --domain=&lt;domian&gt; Sitemap domain -M, --context-mount=&lt;String=String&gt; MappingContext resource URL relative to the current directory. YAML, JSON, or properties. In properties dots are treated as key path separators. Type is inferred from the content type header, if it is present, or extension. Mounts shadow context entries. -P, --parallelism=&lt;parallelism&gt; If the value greater than one then an executor service is created and injected into the context to allow concurrent execution. --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -r, --errors=&lt;pageErrors&gt; Expected number of page errors -1 for any (not fail on errors) default is 0 -t, --timeout=&lt;timeout&gt; If parallelism is greater than one this option specifies timout in seconds awaiting completion of execution. Default value is 60. -T, --page-template=&lt;pageTemplate&gt; Page template URI relative to the current directory -V, --version Print version information and exit. -w, --work-dir=&lt;workDir&gt; Working directory Exit codes: Non-negative number Delegate result -1 Unhandled exception during execution -2 Invalid input -3 Diagnostic failed -4 Execution failed or was cancelled, successful rollback -5 Execution failed or was cancelled, rollback failed -6 Executor service termination timed out","timestamp":1750179868200},"gitlab/contribute/invoke/index.html":{"path":"gitlab/contribute/invoke","link-uuid":"0187cb19-2577-4043-ab7d-833a8dc5fc39","title":"invoke","content":"Version: org.nasdanika.cli@2025.6.0 Usage: nsd gitlab contribute invoke [-fhV] [--progress-console] [--progress-data] [--progress-json] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [-p=&lt;String=String&gt;]... [-P=URL]... &lt;uri&gt; [&lt;bindings&gt;...] Invokes URI &lt;uri&gt; URI to invoke [&lt;bindings&gt;...] Bindings URIs -f, --file URI parameter is a file path -h, --help Show this help message and exit. -p, --property=&lt;String=String&gt; Property -P, --properties=URL Properties resource URL relative to the current directory. YAML, JSON, or properties. Type is inferred from the content type header, if it is present, or extension. Properties are loaded in the order of definition, later properties replacing the former --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -V, --version Print version information and exit. Loads an invocable from a URI as explained in Loading Invocables from URIs and then invokes it with arguments obtained from parameters invocable URIs.","timestamp":1750179868279},"invoke/index.html":{"link-uuid":"c8e15bf4-bcf9-47a7-9a0f-b41c99670885","title":"invoke","content":"Version: org.nasdanika.cli@2025.6.0 Usage: nsd invoke [-fhV] [--progress-console] [--progress-data] [--progress-json] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [-p=&lt;String=String&gt;]... [-P=URL]... &lt;uri&gt; [&lt;bindings&gt;...] Invokes URI &lt;uri&gt; URI to invoke [&lt;bindings&gt;...] Bindings URIs -f, --file URI parameter is a file path -h, --help Show this help message and exit. -p, --property=&lt;String=String&gt; Property -P, --properties=URL Properties resource URL relative to the current directory. YAML, JSON, or properties. Type is inferred from the content type header, if it is present, or extension. Properties are loaded in the order of definition, later properties replacing the former --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -V, --version Print version information and exit. Loads an invocable from a URI as explained in Loading Invocables from URIs and then invokes it with arguments obtained from parameters invocable URIs.","timestamp":1750179868400},"drawio/html-app/save/index.html":{"path":"drawio/html-app/save","link-uuid":"afaf5037-d44d-4bd7-8bb5-854f410a70af","title":"save","content":"Version: org.nasdanika.cli@2025.6.0 Usage: nsd drawio html-app save [-hV] [--progress-console] [--progress-data] [--progress-json] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [--content-type-resource-factory=&lt;String=Class&gt;] ... [--extension-resource-factory=&lt;String=Class&gt;]... [--protocol-resource-factory=&lt;String=Class&gt;]... &lt;output&gt; Saves model to a file &lt;output&gt; Output file --content-type-resource-factory=&lt;String=Class&gt; Maps content type to resource factory class --extension-resource-factory=&lt;String=Class&gt; Maps extension to resource factory class -h, --help Show this help message and exit. --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor --protocol-resource-factory=&lt;String=Class&gt; Maps protocol to resource factory class -V, --version Print version information and exit.","timestamp":1750179868235},"annotated-element-provider-test/index.html":{"link-uuid":"ea433fd7-8597-4248-9d9d-bc6bfb32cbee","title":"annotated-element-provider-test","content":"Usage: nsd annotated-element-provider-test [-a=&lt;a&gt;] [-b=&lt;b&gt;] [-c=&lt;c&gt;] [COMMAND] -a=&lt;a&gt; -b=&lt;b&gt; -c=&lt;c&gt; Commands: commit -","timestamp":1750179868189},"rules/action-model/index.html":{"path":"rules/action-model","link-uuid":"251a38cb-f07d-446e-96fd-ee2a6a99a53c","title":"action-model","content":"Usage: nsd rules action-model [-fhRV] [--progress-console] [--progress-data] [--progress-json] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [-c=&lt;String=String&gt;]... [-C=URL]... [-M=&lt;String=String&gt;]... &lt;model&gt; &lt;output&gt; Generates rule set documentation action model &lt;model&gt; Model URI or file path, resolved relative to the current directory or looked up in registered rule sets if -R option is provided &lt;output&gt; Output file -c, --context-entry=&lt;String=String&gt; Context entries. Shadow entries in contexts and mounts. -C, --context=URL Context resource URL relative to the current directory. YAML, JSON, or properties. In properties dots are treated as key path separators. Type is inferred from the content type header, if it is present, or extension. Contexts are composed in the order of definition, later context entries shadowing the former -f, --file Mdel parameter is a file path -h, --help Show this help message and exit. -M, --context-mount=&lt;String=String&gt; MappingContext resource URL relative to the current directory. YAML, JSON, or properties. In properties dots are treated as key path separators. Type is inferred from the content type header, if it is present, or extension. Mounts shadow context entries. --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -R, --registered Use registered rule set with provided URI -V, --version Print version information and exit.","timestamp":1750179868499},"gitlab/contribute/gsh/index.html":{"path":"gitlab/contribute/gsh","link-uuid":"aea8acf8-d9fc-40e5-85c4-ba2622e49795","title":"gsh","content":"Version: org.nasdanika.groovy@2025.6.0 Usage: nsd gitlab contribute gsh [-hV] [--progress-console] [--progress-data] [--progress-json] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [-p=&lt;String=String&gt;]... [-P=URL]... [&lt;args&gt;...] Groovy Shell [&lt;args&gt;...] Argument URIs -h, --help Show this help message and exit. -p, --property=&lt;String=String&gt; Property -P, --properties=URL Properties resource URL relative to the current directory. YAML, JSON, or properties. Type is inferred from the content type header, if it is present, or extension. Properties are loaded in the order of definition, later properties replacing the former --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -V, --version Print version information and exit.","timestamp":1750179868269},"gitlab/gsh/index.html":{"path":"gitlab/gsh","link-uuid":"a2215127-b3eb-41f2-ba71-078cce5e175b","title":"gsh","content":"Version: org.nasdanika.groovy@2025.6.0 Usage: nsd gitlab gsh [-hV] [--progress-console] [--progress-data] [--progress-json] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [-p=&lt;String=String&gt;]... [-P=URL]... [&lt;args&gt;...] Groovy Shell [&lt;args&gt;...] Argument URIs -h, --help Show this help message and exit. -p, --property=&lt;String=String&gt; Property -P, --properties=URL Properties resource URL relative to the current directory. YAML, JSON, or properties. Type is inferred from the content type header, if it is present, or extension. Properties are loaded in the order of definition, later properties replacing the former --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -V, --version Print version information and exit.","timestamp":1750179868355},"gitlab/contribute/junit/index.html":{"path":"gitlab/contribute/junit","link-uuid":"5444748b-cd01-4155-a493-490dc22ac6d5","title":"junit","content":"Version: org.nasdanika.models.java.cli@2025.6.0 Usage: nsd gitlab contribute junit [-fhVw] [--[no-]ai] [--[no-] comment-response] [--disabled] [--progress-console] [--progress-data] [--progress-json] [--api-endpoint=&lt;apiEndpoint&gt;] [--class-suffix=&lt;classSuffix&gt;] [-k=&lt;apiKey&gt;] [-l=&lt;limit&gt;] [-m=&lt;deploymentOrModelName&gt;] [--package-suffix=&lt;packageSuffix&gt;] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [-r=&lt;prompt&gt;] [-s=&lt;sources&gt;] [-t=&lt;coverageType&gt;] [-v=&lt;apiKeyEnvironmentVariable&gt;] [-e [=&lt;excludes&gt;...]]... [-i[=&lt;includes&gt;...]]... &lt;projectURI&gt; &lt;coverageThreshold&gt; &lt;output&gt; [COMMAND] Generates JUnit tests &lt;projectURI&gt; Project URI &lt;coverageThreshold&gt; Coverage threshold &lt;output&gt; Output URI relative to the project URI --[no-]ai Use AI, defaults to true --api-endpoint=&lt;apiEndpoint&gt; OpenAPI endpoint, defaults to https://api.openai.com/v1/chat/completions --class-suffix=&lt;classSuffix&gt; Test class suffix defaults to Tests --[no-]comment-response Comment AI responses defaults to true --disabled Generate disabled tests -e, --exclude[=&lt;excludes&gt;...] Source excludes Ant pattern -f Project URI is a file path -h, --help Show this help message and exit. -i, --include[=&lt;includes&gt;...] Source includes Ant pattern -k, --api-key=&lt;apiKey&gt; OpenAPI key -l, --limit=&lt;limit&gt; Maximum number of test classes to generate -m, --model=&lt;deploymentOrModelName&gt; OpenAPI deployment or model defaults to gpt-4 --package-suffix=&lt;packageSuffix&gt; Test package suffix defaults to .tests --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -r, --prompt=&lt;prompt&gt; Propmt defaults to 'Generate a JUnit 5 test method leveraging Mockito for the following Java method' -s, --sources=&lt;sources&gt; Sources URI path relative to the project URIy, defaults to src/main/java -t, --coverage-type=&lt;coverageType&gt; Coverage type Valid values: complexity, instruction, branch, line defaults to line -v, --api-key-variable=&lt;apiKeyEnvironmentVariable&gt; OpenAPI key environment variable defaults to OPENAI_API_KEY -V, --version Print version information and exit. -w, --overwrite Overwrite existing tests Commands: jacoco - Loads coverage from jacoco.exec and classes directory","timestamp":1750179868285},"drawio/http-server/index.html":{"path":"drawio/http-server","link-uuid":"ea8572c7-2afd-4ccb-b1ac-2743f72850ad","title":"http-server","content":"Version: org.nasdanika.http@2025.6.0 Usage: nsd drawio http-server [-hV] [--[no-]console] [--progress-console] [--progress-data] [--progress-json] [--connection-base=&lt;connectionBase&gt;] [--http-host=&lt;httpHost&gt;] [--http-port=&lt;httpPort&gt;] [--http-server-shutdown-timeout=&lt;timeout&gt;] [--open=&lt;uriToOpen&gt;] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] &lt;processorProperty&gt; &lt;routeProperty&gt; Routes HTTP requests to a diagram element processor &lt;processorProperty&gt; Processor property &lt;routeProperty&gt; Route property --connection-base=&lt;connectionBase&gt; Connection base Valid values: PARENT, SOURCE, TARGET --[no-]console If true, starts a console and waits for the exit command, otherwise creates a shutdown hook disposing the server -h, --help Show this help message and exit. --http-host=&lt;httpHost&gt; HTTP host (network interface) to bind to --http-port=&lt;httpPort&gt; HTTP port. If a port is not specified, an ephemeral port is used --http-server-shutdown-timeout=&lt;timeout&gt; Timeout in seconds, defaults to 3 seconds --open=&lt;uriToOpen&gt; Opens provided URI in the system browser the URI is resolved relative to http://localhost:&lt;port&gt;/ --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -V, --version Print version information and exit. Example drawio diagram.drawio http-server --http-port=8080 processor route Parent drawio command loads diagram.drawio file This command: Loads processor invocable URIs from the processor property Loads route definitions from the route property Serves diagram element routes on port 8080 Resources Serving HTTP ? Diagrams &amp; Reflection story Routing HTTP Reactor Netty Reference Guide Parameters &lt;processorProperty&gt; Route serving processors shall implement BiFunction&lt;? super HttpServerRequest,? super HttpServerResponse,? extends Publisher&lt;Void&gt;&gt; to serve a single route. Processors may also implement HttpServerRouteBuilder or be adaptable to it. In this case the route property is optional and is used as a route prefix. Examples Java Single route SystemHttpHandler.java import java.util.concurrent.CompletionStage;\nimport java.util.function.BiConsumer;\nimport java.util.function.BiFunction;\nimport java.util.function.Consumer;\n\nimport org.nasdanika.capability.CapabilityFactory.Loader;\nimport org.nasdanika.common.Invocable;\nimport org.nasdanika.common.ProgressMonitor;\nimport org.nasdanika.drawio.Node;\nimport org.nasdanika.graph.Element;\nimport org.nasdanika.graph.processor.ConnectionProcessorConfig;\nimport org.nasdanika.graph.processor.NodeProcessorConfig;\nimport org.nasdanika.graph.processor.ProcessorConfig;\nimport org.nasdanika.graph.processor.ProcessorElement;\nimport org.nasdanika.graph.processor.ProcessorInfo;\nimport org.reactivestreams.Publisher;\n\nimport reactor.core.publisher.Mono;\nimport reactor.netty.http.server.HttpServerRequest;\nimport reactor.netty.http.server.HttpServerResponse;\n\n/**\n * Diagram element processor which processes HTTP requests \n */\npublic class SystemHttpHandler implements BiFunction&lt;HttpServerRequest, HttpServerResponse, Publisher&lt;Void&gt;&gt; {\n    \n    private String amount;\n    \n    @ProcessorElement\n    public void setElement(Node element) {\n        this.amount = element.getProperty(&quot;amount&quot;);\n    }\n\n    /**\n     * This is the constructor signature for graph processor classes which are to be instantiated by URIInvocableCapabilityFactory (org.nasdanika.capability.factories.URIInvocableCapabilityFactory).\n     * Config may be of specific types {@link ProcessorConfig} - {@link NodeProcessorConfig} or {@link ConnectionProcessorConfig}.  \n     * @param loader\n     * @param loaderProgressMonitor\n     * @param data\n     * @param fragment\n     * @param config\n     * @param infoProvider\n     * @param endpointWiringStageConsumer\n     * @param wiringProgressMonitor\n     */\n    public SystemHttpHandler(\n            Loader loader,\n            ProgressMonitor loaderProgressMonitor,\n            Object data,\n            String fragment,\n            ProcessorConfig config,\n            BiConsumer&lt;Element, BiConsumer&lt;ProcessorInfo&lt;Invocable&gt;, ProgressMonitor&gt;&gt; infoProvider,\n            Consumer&lt;CompletionStage&lt;?&gt;&gt; endpointWiringStageConsumer,\n            ProgressMonitor wiringProgressMonitor) {\n\n    }\n\n    @Override\n    public Publisher&lt;Void&gt; apply(HttpServerRequest request, HttpServerResponse response) {\n        return response.sendString(Mono.just(&quot;Account: &quot; + request.param(&quot;account&quot;) + &quot;, Amount: &quot; + amount));\n    }\n\n}\n Route builder RouteBuilderProcessor import java.util.concurrent.CompletionStage;\nimport java.util.function.BiConsumer;\nimport java.util.function.Consumer;\n\nimport org.nasdanika.capability.CapabilityFactory.Loader;\nimport org.nasdanika.common.Invocable;\nimport org.nasdanika.common.ProgressMonitor;\nimport org.nasdanika.drawio.Node;\nimport org.nasdanika.graph.Element;\nimport org.nasdanika.graph.processor.ConnectionProcessorConfig;\nimport org.nasdanika.graph.processor.NodeProcessorConfig;\nimport org.nasdanika.graph.processor.ProcessorConfig;\nimport org.nasdanika.graph.processor.ProcessorElement;\nimport org.nasdanika.graph.processor.ProcessorInfo;\nimport org.nasdanika.http.HttpServerRouteBuilder;\n\nimport reactor.core.publisher.Mono;\nimport reactor.netty.http.server.HttpServerRoutes;\n\n/**\n * Diagram element processor which builds HTTP routes \n */\npublic class RouteBuilderProcessor implements HttpServerRouteBuilder {\n    \n    private String amount;\n    \n    @ProcessorElement\n    public void setElement(Node element) {\n        this.amount = element.getProperty(&quot;amount&quot;);\n    }\n\n    /**\n     * This is the constructor signature for graph processor classes which are to be instantiated by URIInvocableCapabilityFactory (org.nasdanika.capability.factories.URIInvocableCapabilityFactory).\n     * Config may be of specific types {@link ProcessorConfig} - {@link NodeProcessorConfig} or {@link ConnectionProcessorConfig}.  \n     * @param loader\n     * @param loaderProgressMonitor\n     * @param data\n     * @param fragment\n     * @param config\n     * @param infoProvider\n     * @param endpointWiringStageConsumer\n     * @param wiringProgressMonitor\n     */\n    public RouteBuilderProcessor(\n            Loader loader,\n            ProgressMonitor loaderProgressMonitor,\n            Object data,\n            String fragment,\n            ProcessorConfig config,\n            BiConsumer&lt;Element, BiConsumer&lt;ProcessorInfo&lt;Invocable&gt;, ProgressMonitor&gt;&gt; infoProvider,\n            Consumer&lt;CompletionStage&lt;?&gt;&gt; endpointWiringStageConsumer,\n            ProgressMonitor wiringProgressMonitor) {\n        \n    }\n\n    @Override\n    public void buildRoutes(HttpServerRoutes routes) {\n        routes.get(&quot;/balance&quot;, (request, response) -&gt; response.sendString(Mono.just(&quot;Account: &quot; + request.param(&quot;account&quot;) + &quot;, Amount: &quot; + amount)));      \n    }\n\n}\n Groovy person.groovy import reactor.core.publisher.Mono \nimport org.nasdanika.drawio.Node\nimport org.nasdanika.graph.processor.ProcessorElement\n\n//drawio test-data/drawio-http/diagram.drawio http-server --http-port=8080 processor route\nnew java.util.function.BiFunction() {\n\n    @ProcessorElement\n    public Node element;\n    \n    def apply(request, response) {\n        response.sendString(Mono.just(element.getLabel()))\n    }\n    \n}\n &lt;routeProperty&gt; Route property value is a YAML String or Map. String If the value is a String, then the value is the route path and the route method is GET. Example: /person Map If the value is a String, then the map shall contain two keys: method - one of HTTPMethod literals. path - route path Example: method: GET\npath: /person &lt;processorProperty&gt; Route serving processors shall implement BiFunction&lt;? super HttpServerRequest,? super HttpServerResponse,? extends Publisher&lt;Void&gt;&gt; to serve a single route. Processors may also implement HttpServerRouteBuilder or be adaptable to it. In this case the route property is optional and is used as a route prefix. Examples Java Single route SystemHttpHandler.java import java.util.concurrent.CompletionStage;\nimport java.util.function.BiConsumer;\nimport java.util.function.BiFunction;\nimport java.util.function.Consumer;\n\nimport org.nasdanika.capability.CapabilityFactory.Loader;\nimport org.nasdanika.common.Invocable;\nimport org.nasdanika.common.ProgressMonitor;\nimport org.nasdanika.drawio.Node;\nimport org.nasdanika.graph.Element;\nimport org.nasdanika.graph.processor.ConnectionProcessorConfig;\nimport org.nasdanika.graph.processor.NodeProcessorConfig;\nimport org.nasdanika.graph.processor.ProcessorConfig;\nimport org.nasdanika.graph.processor.ProcessorElement;\nimport org.nasdanika.graph.processor.ProcessorInfo;\nimport org.reactivestreams.Publisher;\n\nimport reactor.core.publisher.Mono;\nimport reactor.netty.http.server.HttpServerRequest;\nimport reactor.netty.http.server.HttpServerResponse;\n\n/**\n * Diagram element processor which processes HTTP requests \n */\npublic class SystemHttpHandler implements BiFunction&lt;HttpServerRequest, HttpServerResponse, Publisher&lt;Void&gt;&gt; {\n    \n    private String amount;\n    \n    @ProcessorElement\n    public void setElement(Node element) {\n        this.amount = element.getProperty(&quot;amount&quot;);\n    }\n\n    /**\n     * This is the constructor signature for graph processor classes which are to be instantiated by URIInvocableCapabilityFactory (org.nasdanika.capability.factories.URIInvocableCapabilityFactory).\n     * Config may be of specific types {@link ProcessorConfig} - {@link NodeProcessorConfig} or {@link ConnectionProcessorConfig}.  \n     * @param loader\n     * @param loaderProgressMonitor\n     * @param data\n     * @param fragment\n     * @param config\n     * @param infoProvider\n     * @param endpointWiringStageConsumer\n     * @param wiringProgressMonitor\n     */\n    public SystemHttpHandler(\n            Loader loader,\n            ProgressMonitor loaderProgressMonitor,\n            Object data,\n            String fragment,\n            ProcessorConfig config,\n            BiConsumer&lt;Element, BiConsumer&lt;ProcessorInfo&lt;Invocable&gt;, ProgressMonitor&gt;&gt; infoProvider,\n            Consumer&lt;CompletionStage&lt;?&gt;&gt; endpointWiringStageConsumer,\n            ProgressMonitor wiringProgressMonitor) {\n\n    }\n\n    @Override\n    public Publisher&lt;Void&gt; apply(HttpServerRequest request, HttpServerResponse response) {\n        return response.sendString(Mono.just(&quot;Account: &quot; + request.param(&quot;account&quot;) + &quot;, Amount: &quot; + amount));\n    }\n\n}\n Route builder RouteBuilderProcessor import java.util.concurrent.CompletionStage;\nimport java.util.function.BiConsumer;\nimport java.util.function.Consumer;\n\nimport org.nasdanika.capability.CapabilityFactory.Loader;\nimport org.nasdanika.common.Invocable;\nimport org.nasdanika.common.ProgressMonitor;\nimport org.nasdanika.drawio.Node;\nimport org.nasdanika.graph.Element;\nimport org.nasdanika.graph.processor.ConnectionProcessorConfig;\nimport org.nasdanika.graph.processor.NodeProcessorConfig;\nimport org.nasdanika.graph.processor.ProcessorConfig;\nimport org.nasdanika.graph.processor.ProcessorElement;\nimport org.nasdanika.graph.processor.ProcessorInfo;\nimport org.nasdanika.http.HttpServerRouteBuilder;\n\nimport reactor.core.publisher.Mono;\nimport reactor.netty.http.server.HttpServerRoutes;\n\n/**\n * Diagram element processor which builds HTTP routes \n */\npublic class RouteBuilderProcessor implements HttpServerRouteBuilder {\n    \n    private String amount;\n    \n    @ProcessorElement\n    public void setElement(Node element) {\n        this.amount = element.getProperty(&quot;amount&quot;);\n    }\n\n    /**\n     * This is the constructor signature for graph processor classes which are to be instantiated by URIInvocableCapabilityFactory (org.nasdanika.capability.factories.URIInvocableCapabilityFactory).\n     * Config may be of specific types {@link ProcessorConfig} - {@link NodeProcessorConfig} or {@link ConnectionProcessorConfig}.  \n     * @param loader\n     * @param loaderProgressMonitor\n     * @param data\n     * @param fragment\n     * @param config\n     * @param infoProvider\n     * @param endpointWiringStageConsumer\n     * @param wiringProgressMonitor\n     */\n    public RouteBuilderProcessor(\n            Loader loader,\n            ProgressMonitor loaderProgressMonitor,\n            Object data,\n            String fragment,\n            ProcessorConfig config,\n            BiConsumer&lt;Element, BiConsumer&lt;ProcessorInfo&lt;Invocable&gt;, ProgressMonitor&gt;&gt; infoProvider,\n            Consumer&lt;CompletionStage&lt;?&gt;&gt; endpointWiringStageConsumer,\n            ProgressMonitor wiringProgressMonitor) {\n        \n    }\n\n    @Override\n    public void buildRoutes(HttpServerRoutes routes) {\n        routes.get(&quot;/balance&quot;, (request, response) -&gt; response.sendString(Mono.just(&quot;Account: &quot; + request.param(&quot;account&quot;) + &quot;, Amount: &quot; + amount)));      \n    }\n\n}\n Groovy person.groovy import reactor.core.publisher.Mono \nimport org.nasdanika.drawio.Node\nimport org.nasdanika.graph.processor.ProcessorElement\n\n//drawio test-data/drawio-http/diagram.drawio http-server --http-port=8080 processor route\nnew java.util.function.BiFunction() {\n\n    @ProcessorElement\n    public Node element;\n    \n    def apply(request, response) {\n        response.sendString(Mono.just(element.getLabel()))\n    }\n    \n}\n &lt;routeProperty&gt; Route property value is a YAML String or Map. String If the value is a String, then the value is the route path and the route method is GET. Example: /person Map If the value is a String, then the map shall contain two keys: method - one of HTTPMethod literals. path - route path Example: method: GET\npath: /person Route serving processors shall implement BiFunction&lt;? super HttpServerRequest,? super HttpServerResponse,? extends Publisher&lt;Void&gt;&gt; to serve a single route. Processors may also implement HttpServerRouteBuilder or be adaptable to it. In this case the route property is optional and is used as a route prefix. Examples Java Single route SystemHttpHandler.java import java.util.concurrent.CompletionStage;\nimport java.util.function.BiConsumer;\nimport java.util.function.BiFunction;\nimport java.util.function.Consumer;\n\nimport org.nasdanika.capability.CapabilityFactory.Loader;\nimport org.nasdanika.common.Invocable;\nimport org.nasdanika.common.ProgressMonitor;\nimport org.nasdanika.drawio.Node;\nimport org.nasdanika.graph.Element;\nimport org.nasdanika.graph.processor.ConnectionProcessorConfig;\nimport org.nasdanika.graph.processor.NodeProcessorConfig;\nimport org.nasdanika.graph.processor.ProcessorConfig;\nimport org.nasdanika.graph.processor.ProcessorElement;\nimport org.nasdanika.graph.processor.ProcessorInfo;\nimport org.reactivestreams.Publisher;\n\nimport reactor.core.publisher.Mono;\nimport reactor.netty.http.server.HttpServerRequest;\nimport reactor.netty.http.server.HttpServerResponse;\n\n/**\n * Diagram element processor which processes HTTP requests \n */\npublic class SystemHttpHandler implements BiFunction&lt;HttpServerRequest, HttpServerResponse, Publisher&lt;Void&gt;&gt; {\n    \n    private String amount;\n    \n    @ProcessorElement\n    public void setElement(Node element) {\n        this.amount = element.getProperty(&quot;amount&quot;);\n    }\n\n    /**\n     * This is the constructor signature for graph processor classes which are to be instantiated by URIInvocableCapabilityFactory (org.nasdanika.capability.factories.URIInvocableCapabilityFactory).\n     * Config may be of specific types {@link ProcessorConfig} - {@link NodeProcessorConfig} or {@link ConnectionProcessorConfig}.  \n     * @param loader\n     * @param loaderProgressMonitor\n     * @param data\n     * @param fragment\n     * @param config\n     * @param infoProvider\n     * @param endpointWiringStageConsumer\n     * @param wiringProgressMonitor\n     */\n    public SystemHttpHandler(\n            Loader loader,\n            ProgressMonitor loaderProgressMonitor,\n            Object data,\n            String fragment,\n            ProcessorConfig config,\n            BiConsumer&lt;Element, BiConsumer&lt;ProcessorInfo&lt;Invocable&gt;, ProgressMonitor&gt;&gt; infoProvider,\n            Consumer&lt;CompletionStage&lt;?&gt;&gt; endpointWiringStageConsumer,\n            ProgressMonitor wiringProgressMonitor) {\n\n    }\n\n    @Override\n    public Publisher&lt;Void&gt; apply(HttpServerRequest request, HttpServerResponse response) {\n        return response.sendString(Mono.just(&quot;Account: &quot; + request.param(&quot;account&quot;) + &quot;, Amount: &quot; + amount));\n    }\n\n}\n Route builder RouteBuilderProcessor import java.util.concurrent.CompletionStage;\nimport java.util.function.BiConsumer;\nimport java.util.function.Consumer;\n\nimport org.nasdanika.capability.CapabilityFactory.Loader;\nimport org.nasdanika.common.Invocable;\nimport org.nasdanika.common.ProgressMonitor;\nimport org.nasdanika.drawio.Node;\nimport org.nasdanika.graph.Element;\nimport org.nasdanika.graph.processor.ConnectionProcessorConfig;\nimport org.nasdanika.graph.processor.NodeProcessorConfig;\nimport org.nasdanika.graph.processor.ProcessorConfig;\nimport org.nasdanika.graph.processor.ProcessorElement;\nimport org.nasdanika.graph.processor.ProcessorInfo;\nimport org.nasdanika.http.HttpServerRouteBuilder;\n\nimport reactor.core.publisher.Mono;\nimport reactor.netty.http.server.HttpServerRoutes;\n\n/**\n * Diagram element processor which builds HTTP routes \n */\npublic class RouteBuilderProcessor implements HttpServerRouteBuilder {\n    \n    private String amount;\n    \n    @ProcessorElement\n    public void setElement(Node element) {\n        this.amount = element.getProperty(&quot;amount&quot;);\n    }\n\n    /**\n     * This is the constructor signature for graph processor classes which are to be instantiated by URIInvocableCapabilityFactory (org.nasdanika.capability.factories.URIInvocableCapabilityFactory).\n     * Config may be of specific types {@link ProcessorConfig} - {@link NodeProcessorConfig} or {@link ConnectionProcessorConfig}.  \n     * @param loader\n     * @param loaderProgressMonitor\n     * @param data\n     * @param fragment\n     * @param config\n     * @param infoProvider\n     * @param endpointWiringStageConsumer\n     * @param wiringProgressMonitor\n     */\n    public RouteBuilderProcessor(\n            Loader loader,\n            ProgressMonitor loaderProgressMonitor,\n            Object data,\n            String fragment,\n            ProcessorConfig config,\n            BiConsumer&lt;Element, BiConsumer&lt;ProcessorInfo&lt;Invocable&gt;, ProgressMonitor&gt;&gt; infoProvider,\n            Consumer&lt;CompletionStage&lt;?&gt;&gt; endpointWiringStageConsumer,\n            ProgressMonitor wiringProgressMonitor) {\n        \n    }\n\n    @Override\n    public void buildRoutes(HttpServerRoutes routes) {\n        routes.get(&quot;/balance&quot;, (request, response) -&gt; response.sendString(Mono.just(&quot;Account: &quot; + request.param(&quot;account&quot;) + &quot;, Amount: &quot; + amount)));      \n    }\n\n}\n Groovy person.groovy import reactor.core.publisher.Mono \nimport org.nasdanika.drawio.Node\nimport org.nasdanika.graph.processor.ProcessorElement\n\n//drawio test-data/drawio-http/diagram.drawio http-server --http-port=8080 processor route\nnew java.util.function.BiFunction() {\n\n    @ProcessorElement\n    public Node element;\n    \n    def apply(request, response) {\n        response.sendString(Mono.just(element.getLabel()))\n    }\n    \n} Route property value is a YAML String or Map. String If the value is a String, then the value is the route path and the route method is GET. Example: /person Map If the value is a String, then the map shall contain two keys: method - one of HTTPMethod literals. path - route path Example: method: GET\npath: /person","timestamp":1750179868253},"java/junit/index.html":{"path":"java/junit","link-uuid":"ac5b0d64-df6b-4850-b192-f6eab2dfa869","title":"junit","content":"Version: org.nasdanika.models.java.cli@2025.6.0 Usage: nsd java junit [-fhVw] [--[no-]ai] [--[no-]comment-response] [--disabled] [--progress-console] [--progress-data] [--progress-json] [--api-endpoint=&lt;apiEndpoint&gt;] [--class-suffix=&lt;classSuffix&gt;] [-k=&lt;apiKey&gt;] [-l=&lt;limit&gt;] [-m=&lt;deploymentOrModelName&gt;] [--package-suffix=&lt;packageSuffix&gt;] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [-r=&lt;prompt&gt;] [-s=&lt;sources&gt;] [-t=&lt;coverageType&gt;] [-v=&lt;apiKeyEnvironmentVariable&gt;] [-e[=&lt;excludes&gt;...]]... [-i[=&lt;includes&gt;...]]... &lt;projectURI&gt; &lt;coverageThreshold&gt; &lt;output&gt; [COMMAND] Generates JUnit tests &lt;projectURI&gt; Project URI &lt;coverageThreshold&gt; Coverage threshold &lt;output&gt; Output URI relative to the project URI --[no-]ai Use AI, defaults to true --api-endpoint=&lt;apiEndpoint&gt; OpenAPI endpoint, defaults to https://api.openai.com/v1/chat/completions --class-suffix=&lt;classSuffix&gt; Test class suffix defaults to Tests --[no-]comment-response Comment AI responses defaults to true --disabled Generate disabled tests -e, --exclude[=&lt;excludes&gt;...] Source excludes Ant pattern -f Project URI is a file path -h, --help Show this help message and exit. -i, --include[=&lt;includes&gt;...] Source includes Ant pattern -k, --api-key=&lt;apiKey&gt; OpenAPI key -l, --limit=&lt;limit&gt; Maximum number of test classes to generate -m, --model=&lt;deploymentOrModelName&gt; OpenAPI deployment or model defaults to gpt-4 --package-suffix=&lt;packageSuffix&gt; Test package suffix defaults to .tests --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor -r, --prompt=&lt;prompt&gt; Propmt defaults to 'Generate a JUnit 5 test method leveraging Mockito for the following Java method' -s, --sources=&lt;sources&gt; Sources URI path relative to the project URIy, defaults to src/main/java -t, --coverage-type=&lt;coverageType&gt; Coverage type Valid values: complexity, instruction, branch, line defaults to line -v, --api-key-variable=&lt;apiKeyEnvironmentVariable&gt; OpenAPI key environment variable defaults to OPENAI_API_KEY -V, --version Print version information and exit. -w, --overwrite Overwrite existing tests Commands: jacoco - Loads coverage from jacoco.exec and classes directory","timestamp":1750179868410},"model/crew-ai/index.html":{"path":"model/crew-ai","link-uuid":"82c7ff44-5102-4473-9c97-2cb2667c4437","title":"crew-ai","content":"Version: org.nasdanika.models.crewai.cli@2025.6.0 Usage: nsd model crew-ai [-hV] [--progress-console] [--progress-data] [--progress-json] [--progress-logger=&lt;progressLogger&gt;] [--progress-output=&lt;progressOutput&gt;] [--content-type-resource-factory=&lt;String=Class&gt;]... [--extension-resource-factory=&lt;String=Class&gt;]... [--protocol-resource-factory=&lt;String=Class&gt;]... &lt;output&gt; Generates CrewAI code and configuration from a model &lt;output&gt; Crew class output file --content-type-resource-factory=&lt;String=Class&gt; Maps content type to resource factory class --extension-resource-factory=&lt;String=Class&gt; Maps extension to resource factory class -h, --help Show this help message and exit. --progress-console Output progress to console --progress-data Output progress data --progress-json Output progress in JSON --progress-logger=&lt;progressLogger&gt; Output logger for progress monitor --progress-output=&lt;progressOutput&gt; Output file for progress monitor --protocol-resource-factory=&lt;String=Class&gt; Maps protocol to resource factory class -V, --version Print version information and exit.","timestamp":1750179868439}}